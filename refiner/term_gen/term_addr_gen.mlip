(*
 * Addressed operations on terms.
 *)

open Refine_error_sig
open Term_sig
open Term_base_sig
open Term_op_sig
open Term_addr_sig

module MakeAddressType (TermType : TermSig) : TypeSig

module TermAddr (**)
   (TermType : TermSig)
   (Term : TermBaseSig
    with type term = TermType.term
    with type term' = TermType.term'
    with type bound_term = TermType.bound_term
    with type bound_term' = TermType.bound_term'
    with type operator = TermType.operator
    with type operator' = TermType.operator')
   (TermOp : TermOpSig
    with type term = TermType.term)
   (RefineError : RefineErrorSig
    with type term = TermType.term
    with type address = MakeAddressType (TermType).t)
: TermAddrSig
  with type term = TermType.term
  with type address = MakeAddressType (TermType).t

(*
 * -*-
 * Local Variables:
 * Caml-master: "refiner"
 * End:
 * -*-
 *)
