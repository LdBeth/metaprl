(*
 * Addressed operations on terms.
 *)

open Refine_error_sig
open Term_sig
open Term_base_sig
open Term_op_sig
open Term_addr_sig

module MakeAddressType (TermType : TermSig) : TypeSig

module TermAddr (**)
   (TermType : TermSig)
   (Term : TermBaseSig
    with type term = TermType.term
    with type term' = TermType.term'
    with type bound_term = TermType.bound_term
    with type bound_term' = TermType.bound_term'
    with type operator = TermType.operator
    with type operator' = TermType.operator')
   (TermOp : TermOpSig
    with type term = TermType.term)
   (RefineError : RefineErrorSig
    with type term = TermType.term
    with type address = MakeAddressType (TermType).t)
: TermAddrSig
  with type term = TermType.term
  with type address = MakeAddressType (TermType).t

(*
 * $Log$
 * Revision 1.1  1998/07/02 18:36:18  jyh
 * Refiner modules now raise RefineError exceptions directly.
 * Modules in this revision have two versions: one that raises
 * verbose exceptions, and another that uses a generic exception.
 *
 * Revision 1.1  1998/06/03 15:23:42  jyh
 * Generalized many the term_addr, term_man, and term_shape modules.
 *
 * Revision 1.1  1998/05/28 15:01:59  jyh
 * Partitioned refiner into subdirectories.
 *
 * Revision 1.1  1998/05/28 02:53:06  nogin
 * Splitted Term_ds and Term_ds_simple modules into a smaller modules
 * for use in the functorized refiner
 *
 *
 *
 * -*-
 * Local Variables:
 * Caml-master: "refiner"
 * End:
 * -*-
 *)
