(*
 * Shared types for printing ML terms.
 *)

open Refiner.Refiner.Term
open Refiner.Refiner.TermMeta

(*
 * Generic file.
 *)
module type FileSig =
sig
   (* File type *)
   type t

   (* Input type *)
   type name

   (* Output type *)
   type out

   (* Creation *)
   val create : name -> t
   val close : t -> unit

   (* Output operations *)
   val puti : t -> string -> unit
   val put : t -> string -> unit
   val get : t -> out
end

(*
 * Generic printer.
 *)
module type PrinterSig =
sig
   (* File type *)
   type t

   (* Printers *)
   val print_term : t -> term -> unit
   val print_named_term : t -> string -> term -> unit
   val print_mterm : t -> meta_term -> unit
   val print_term_list : t -> term list -> unit
end

(*
 * -*-
 * Local Variables:
 * Caml-master: "refiner"
 * End:
 * -*-
 *)
