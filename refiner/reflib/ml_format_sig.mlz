(*
 * Shared types for printing ML terms.
 *
 * ----------------------------------------------------------------
 *
 * This file is part of MetaPRL, a modular, higher order
 * logical framework that provides a logical programming
 * environment for OCaml and other languages.
 *
 * See the file doc/index.html for information on Nuprl,
 * OCaml, and more information about this system.
 *
 * Copyright (C) 1998 Jason Hickey, Cornell University
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 * Author: Jason Hickey
 * jyh@cs.cornell.edu
 *)

open Refiner.Refiner.Term
open Refiner.Refiner.TermMeta

(*
 * OCAML expression syntax.
 *)
type ml_expr =
   ML_Var of string
 | ML_Int of int
 | ML_Num of Mp_num.num
 | ML_String of string
 | ML_List of ml_expr list
 | ML_Let of string * ml_expr * ml_expr
 | ML_Apply of ml_expr list
 | ML_Tuple of ml_expr list
 | ML_Record of (ml_expr * ml_expr) list
 | ML_Module_Var of string list

(*
 * Printer module.
 *)
module type FormatTermSig =
sig
   val format_term : term -> ml_expr
   val format_mterm : meta_term -> ml_expr
   val format_term_list : term list -> ml_expr
end

(*
 * -*-
 * Local Variables:
 * Caml-master: "refiner"
 * End:
 * -*-
 *)
