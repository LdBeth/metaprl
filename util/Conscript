#### Conscript
#### David Bustos
###
### This is the top-level Conscript file.  Conscript files set up dependencies
### on a per-directory basis.  This one creates a default build environment
### and moves into subdirectories for the rest.


### Default environment

$native = 0;	# 0 for bytecodes, 1 for native

## Cons environments come from the cons module.
$env = new cons(
    ## Overrides
    OCAMLC	=> $native ? "ocamlopt.opt" : "ocamlc",	# The OCaml compiler
    SUFOBJ	=> $native ? ".cmx"  : ".cmo",		# Object suffix
    SUFLIB	=> $native ? ".cmxa" : ".cma",		# Library suffix

    SUFSRC	=> ".ml",	# The suffix for source files
    SUFSIG	=> ".mli",	# The suffix for signature files
    SUFCSIG	=> ".cmi",	# The suffix for compiled signature files

    OCAMLCFLAGS => "-thread",					# Basic options
    OCAMLCOM	=> "%OCAMLC %OCAMLCFLAGS %_IFLAGS -c %1",	# How to compile files
    SIGCOM	=> "%OCAMLC %OCAMLCFLAGS %_IFLAGS -c %1",	# How to compile signatures
    LINKCOM	=> "%OCAMLC %OCAMLCFLAGS -o %> %MLLIBS %< %CCLIBS",	# How to link objects
    ARCOM	=> "%OCAMLC %OCAMLCFLAGS -a -o %> %<",	# How to archive objects
    LEXCOM	=> "ocamllex %1",		# How to lex a file
    YACCCOM	=> "ocamlyacc %1",		# How to yacc a file
    LNCOM       => "ln -sf %1:f %>",		# How to link a file

    PPFLAGS     => "",
    CAMLP4MACRO => "camlp4o util/macro.cmo %PPFLAGS",

    ENV  => {
      PATH      => $ENV{'PATH'}        # Use user's path instead of the cons default
      },

);

## Clone the default environment and add the lib/naml/stdlib directory to the
## include path, since some of the modules here depend on the modules therein.
$env = $env->clone(
   OCAMLCFLAGS => "-pp 'camlp4o pa_extend.cmo q_MLast.cmo' -I `camlp4 -where`"
);

## Declare the module sources in this directory that will be built
OCamlSources $env
	'ocamldep.mll',
	'misc.ml',
	'macro.ml';

OCamlLibrary $env 'util',
	'macro';

## Declare a program target named "ocamldep" built from of the listed
## modules.
##
## For the OCamlProgram method:
## - No extension is used on the modules to allow for both bytecode and native
##   code builds.
## - A leading # in a filename indicates that the name is relative to the
##   top-level directory.
#
OCamlProgram $env 'ocamldep', 'ocamldep';

## Add the program to the default target list
Default qw( util.cma ocamldep );
