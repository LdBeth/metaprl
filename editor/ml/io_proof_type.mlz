(*
 * This defines raw proof that is saved in a file.
 * The main difference between this proof and Proof.t
 * is that these proofs do not contains tactics, so
 * they can be marshaled.
 *
 * A real proof can be obtained by combining
 * a list of tactics and an io_proof that uses the list
 * to look up the tactics.
 *)

include Tactic_type

open Refiner.Refiner.Term
open Refiner.Refiner.Refine

(*
 * An IO step does not save the tactic,
 * and saves only part of the goal.
 *)
type aterm =
   { aterm_label : string;              (* Label describes the step in the proof *)
     aterm_args : Tactic_type.attribute list        (* Proof annotations *)
   }

type proof_step =
   { step_goal : aterm tactic_arg;
     step_subgoals : aterm tactic_arg list;
     step_ast : MLast.expr;             (* Parsed expression *)
     step_text : string                 (* String representation of text *)
   }

(*
 * A proof is a recursive tree of steps.
 * The status is redundant, except for "asserted" proofs.
 * Asserted proofs are incomplete, but they are marked as complete.
 *)
type proof =
   { proof_status : proof_status;
     proof_step : proof_node;
     proof_children : proof_child list;
     proof_extras : proof list
   }

and proof_status =
   StatusBad
 | StatusPartial
 | StatusAsserted
 | StatusComplete

and proof_node =
   ProofStep of proof_step
 | ProofNode of proof

and proof_child =
   ChildGoal of aterm tactic_arg
 | ChildProof of proof
   
(*
 * $Log$
 * Revision 1.1  1998/05/28 13:45:38  jyh
 * Updated the editor to use new Refiner structure.
 * ITT needs dform names.
 *
 * Revision 1.2  1998/04/21 20:58:04  jyh
 * Fixed typing problems introduced by refiner msequents.
 *
 * Revision 1.1  1998/04/17 01:31:06  jyh
 * Editor is almost constructed.
 *
 * Revision 1.2  1998/04/13 21:11:03  jyh
 * Added interactive proofs to filter.
 *
 * Revision 1.1  1998/04/13 17:08:38  jyh
 * Adding interactive proofs.
 *
 *
 * -*-
 * Local Variables:
 * Caml-master: "refiner"
 * End:
 * -*-
 *)
