Import qw( env );

$env = $env->clone(
   INCPATH  => [@{$env->{INCPATH}}, "#mllib",
               "#refiner/refbase", "#refiner/refsig", "#refiner/term_gen",
               "#refiner/term_ds", "#refiner/term_std", "#refiner/rewrite",
               "#refiner/refiner", "#refiner/reflib", "#library", "#ensemble",
               "#filter/boot", "#filter/base", "#filter/filter",
               "#theories/tactic", "#theories/ocaml", "#theories/base",
               "#theories/itt", "#theories/mc",
               "$env->{MC}/lib/naml/stdlib",
               "$env->{MC}/lib/util",
               "$env->{MC}/fir/type",
               "$env->{MC}/fir/util",
               "$env->{MC}/fir/opt",
               "$env->{MC}/front/fc/config",
               "$env->{MC}/front/fc/parse",
               "$env->{MC}/front/fc/ast",
               "$env->{MC}/front/fc/air",
               "$env->{MC}/front/fc/ir",
               "$env->{MC}/front/fc/fir",
               "$env->{MC}/front/mc",
               "$env->{MC}/front/naml/type",
               "$env->{MC}/front/naml/parse",
               "$env->{MC}/front/naml/ir",
               "$env->{MC}/front/unlam",
               "$env->{MC}/front/pasqual/util/bootstrap",
               "$env->{MC}/front/pasqual/ast",
               "$env->{MC}/front/pasqual/ir",
               "$env->{MC}/front/pasqual/fir",
               "$env->{MC}/arch/conf",
               "$env->{MC}/arch/mir/type",
               "$env->{MC}/arch/mir/util",
               "$env->{MC}/arch/mir/opt",
               "$env->{MC}/arch/type",
               "$env->{MC}/arch/util",
               "$env->{MC}/arch/ra",
               "$env->{MC}/arch/x86/type",
               "$env->{MC}/arch/x86/util",
               "$env->{MC}/arch/x86/opt",
               "$env->{MC}/arch/x86/moogle"],
   ENV => {
      PATH => "$ENV{'PATH'}:./filter/filter",
      MPLIB => "lib",
      LC_ALL => "C"
   },
   OCAMLCFLAGS => "-thread -linkall",
   OCAMLC => "prlc -opt -I /usr/lib/camlp4",
   OCAMLLINK => "$env->{OCAMLLINK} -I /usr/lib/camlp4",
   MLLIBS => "unix.cmxa threads.cmxa odyl.cmxa camlp4.cmxa pa_o.cmx",
   CCLIBS => "-cclib clib/clib.a",

   # Files compiled with prlc implicitly depend on these files and modules.
   HIDDEPS => "#filter/filter/prlc",
   HIDMODDEPS => "Printf Mp_debug Refiner Refine_exn Term Term_util Theory Dform Dform_print Tactic Mp_resource Precedence Filter_summary",
);

Command $env 'mp_version.ml', "#mk/config", qq(
   echo -n 'let version = "'"MetaPRL %MP_VERSION:\\n\\t\\tbuild [`LC_ALL=C LANG=C date`]\\n\\t\\ton `hostname`\\n\\t\\tUses %REFINER Refiner_%TERMS"'"' > %>
);

OCamlSources $env
   'recursive_lock.ml',
   'mux_channel.ml',
   'display_term.ml',
   'proof_edit.ml',
   'package_sig.mlz',
   'package_info.ml',
   'shell_tex.ml',
   'shell_sig.mlz',
   'shell_rewrite.ml',
   'shell_rule.ml',
   'shell_package.ml',
   'shell_root.ml',
   'shell_p4_sig.mlz',
   'shell_state.ml',
   'shell_http.ml',
   'shell.ml',
   'mp_version.ml',
   'shell_mp.ml',
   'nuprl_sig.mlz',
   'nuprl_eval.ml',
   'nuprl_jprover.ml',
   'nuprl_run.ml',
   'mp_top.ml';

# These files use external symbols in #clib/clib.a.
for my $mod ('mp_top', 'shell', 'shell_mp') {
    Depends $env $mod.$env->{SUFOBJ}, "#clib/clib.a";
}

OCamlProgram $env 'mp.opt', 'Itt_theory', 'Itt_record_exm', 'Mp_mc_theory', 'mp_top';

## Add the library to the default target list
Default qw( mp.opt );
