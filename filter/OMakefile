#
# Generic camlp4 preprocessing
#
OCAMLPPFLAGS = -pp "$(CAMLP4O) -I $(CAMLP4LIB) q_MLast.cmo pa_extend.cmo"

%.cmx %.o: $(CAMLP4O_VERSION)
%.cmo: $(CAMLP4O_VERSION)

#
# Name of main program
#
MAINLIB = prlc
MAINPROG = prlc

########################################################################
# Recursive make
#########################################################################

CamlSubDirs(base phobos filter)

#
# Build combined libraries from subdirs
#
include base/Files
include phobos/Files

SUB_FILES =\
	$(addprefix base/, $(BASE_FILES))\
	$(addprefix phobos/, $(PHOBOS_FILES))\
	filter/term_grammar

section
    OCAML_LINK_FLAGS += -linkall

    OCamlLibrary($(MAINLIB), $(SUB_FILES))
    OCamlLibraryCopy($(MPINSTALL), $(LIB), $(MAINLIB), $(EMPTY))

########################################################################
# MAIN PROGRAMS
########################################################################

#
# When native code is profiled, filter binaries need to be bytecode
#
if $(NATIVE_PROFILING_ENABLED)
   NATIVE_ENABLED = false
   export

#
# Other libraries that we always want to include
#
OCAML_CLIBS = $(file $(ROOT)/clib/clib) $(file $(ROOT)/libmojave/cutil/liblmcutil)
OCAML_OTHER_LIBS += str
OCAML_LIBS =\
        $(LIB)/lm\
	$(LIB)/util

#
# Libraries for camlp4n
#
CAMLP4N = camlp4n
CAMLP4O = camlp4o

CAMLP4_FILES =\
	filter/filter_patt\
	filter/filter_prog\
	filter/filter_parse\
	filter/filter_main

STANDARD_LIBS =\
	$(CAMLP4LIB)/camlp4\
	$(LIB)/refiner\
	$(LIB)/library\
	$(LIB)/trefiner\
	$(LIB)/prooflib\
	$(MAINLIB)

CAMLP4_LIBS =\


CAMLP4N_LIBS =\
	$(CAMLP4LIB)/odyl\
	$(STANDARD_LIBS)\
	$(CAMLP4_LIBS)

CAMLP4N_FILES =\
	$(CAMLP4LIB)/pa_o\
	$(CAMLP4LIB)/pr_dump\
	$(CAMLP4LIB)/pa_extend\
	$(CAMLP4LIB)/q_MLast\
	$(CAMLP4_FILES)

CAMLP4O_LIBS =\
	$(CAMLP4LIB)/odyl\
	$(STANDARD_LIBS)\
	$(CAMLP4_LIBS)

CAMLP4O_FILES =\
	$(CAMLP4LIB)/pa_o\
	$(CAMLP4LIB)/pr_o\
	$(CAMLP4LIB)/pa_extend\
	$(CAMLP4LIB)/q_MLast\
	$(CAMLP4_FILES)

#
# File format conversion
#
CONVERT = convert

CONVERT_LIBS =\
	$(STANDARD_LIBS)

CONVERT_FILES =\
	filter/filter_convert


#
# Main program
#
PRLCOMP = prlc

PRLCOMP_FILES =\
	filter/prlcomp

PRLCOMP_LIBS =\
	$(STANDARD_LIBS)

#
# Files for binary compiler.
#
PRLCN = prlcn
PRLCO = prlco

PRLC_FILES =\
	$(PRLCOMP_FILES)\
	filter/filter_prog\
	filter/filter_bin

PRLCN_LIBS =\
	$(STANDARD_LIBS)

PRLCN_FILES =\
	$(CAMLP4LIB)/pr_dump\
	$(PRLC_FILES)

PRLCO_LIBS =\
	$(STANDARD_LIBS)

PRLCO_FILES =\
	$(CAMLP4LIB)/pr_o\
	$(PRLC_FILES)

#
# Compile a special camlp4 to run Nuprl.
#
section
    OCAML_LIBS += $(CAMLP4N_LIBS)
    OCAML_LINK_FLAGS += -linkall

    OCamlProgramInstall($(MPINSTALL), $(LIB), $(CAMLP4N), $(CAMLP4N_FILES))

section
    OCAML_LIBS += $(CAMLP4O_LIBS)
    OCAML_LINK_FLAGS += -linkall

    OCamlProgramInstall($(MPINSTALL), $(LIB), $(CAMLP4O), $(CAMLP4O_FILES))

section
    OCAML_LIBS += $(PRLCN_LIBS)

    OCamlProgramInstall($(MPINSTALL), $(BIN), $(PRLCN), $(PRLCN_FILES))

section
    OCAML_LIBS += $(PRLCO_LIBS)

    OCamlProgramInstall($(MPINSTALL), $(BIN), $(PRLCO), $(PRLCO_FILES))

section
    OCAML_LIBS += $(CONVERT_LIBS)

    OCamlProgramInstall($(MPINSTALL), $(BIN), $(CONVERT), $(CONVERT_FILES))

section
    OCAML_LIBS += $(PRLCOMP_LIBS)

    OCamlProgramInstall($(MPINSTALL), $(BIN), $(PRLCOMP), $(PRLCOMP_FILES))

#
# Default targets
#
LIB_PROGS = $(CAMLP4N) $(CAMLP4O)
BIN_PROGS = $(PRLCN) $(PRLCO) $(CONVERT) $(PRLCOMP)
PROGS = $(LIB_PROGS) $(BIN_PROGS)
INSTALL = $(addprefix $(LIB)/, $(LIB_PROGS)) $(addprefix $(BIN)/, $(BIN_PROGS))

all: $(PROGS)
opt: $(PROGS)
install: $(INSTALL)

#
# Clean up
#
clean:
    $(CLEAN)
