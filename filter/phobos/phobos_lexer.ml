# 25 "phobos_lexer.mll"
 
open Phobos_parser
open Phobos_parse_state
open Phobos_type
open Phobos_constants
open Phobos_util

(*
 * File position.
 *)
let current_line = ref 1
let current_schar = ref 0

(*
 * Advance a line.
 *)
let set_next_line lexbuf =
   incr current_line;
   current_schar := Lexing.lexeme_end lexbuf

(*
 * Get the position of the current lexeme.
 * We assume it is all on one line.
 *)
let set_lexeme_position lexbuf =
   let line = !current_line in
   let schar = Lexing.lexeme_start lexbuf - !current_schar in
   let echar = Lexing.lexeme_end lexbuf - !current_schar in
   let file = current_file () in
   let pos = file, line, schar, line, echar in
      set_current_position pos;
      pos

(*
 * Provide a buffer for building strings.
 *)
let stringbuf = Buffer.create 32
let string_start = ref (0, 0)

let string_add_char c =
   Buffer.add_string stringbuf 

let pop_string lexbuf =
   let s = Buffer.contents stringbuf in
   let sline, schar = !string_start in
   let eline = !current_line in
   let echar = Lexing.lexeme_end lexbuf - !current_schar in
   let pos = current_file (), sline, schar, eline, echar in
      Buffer.clear stringbuf;
      s, pos

let set_string_start lexbuf =
   string_start := !current_line, Lexing.lexeme_start lexbuf - !current_schar
let lex_tables = {
  Lexing.lex_base = 
   "\000\000\002\000\086\000\249\255\250\255\001\000\088\000\050\000\
    \251\255\254\255\253\255\252\255\255\255\254\255\255\255\093\000\
    \250\255\002\000\220\255\006\000\254\255\226\255\241\255\162\000\
    \246\000\088\000\235\255\231\255\065\001\225\255\089\000\100\000\
    \122\000\074\000\233\255\223\255\072\000\222\255\224\255\240\255\
    \149\001\228\255\227\255\233\001\230\255\234\255\229\255\221\255\
    \098\000\061\002\236\255\077\000\238\255\110\000\239\000\141\002\
    \249\000\151\002\161\002\183\002\193\002\203\002\215\002\237\002\
    \018\003\041\003\242\255\129\000\244\255\079\003\237\255\243\255\
    \154\003\229\003\172\000";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\006\000\006\000\006\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\006\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\010\000\
    \035\000\035\000\255\255\255\255\009\000\255\255\035\000\004\000\
    \003\000\023\000\255\255\255\255\016\000\255\255\255\255\255\255\
    \008\000\255\255\255\255\002\000\255\255\255\255\255\255\255\255\
    \008\000\008\000\255\255\255\255\255\255\255\255\003\000\255\255\
    \255\255\006\000\006\000\255\255\255\255\006\000\004\000\006\000\
    \255\255\005\000\255\255\255\255\255\255\009\000\255\255\255\255\
    \007\000\010\000\000\000";
  Lexing.lex_default = 
   "\018\000\003\000\003\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\255\255\000\000\000\000\000\000\255\255\
    \255\255\255\255\000\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\000\000\000\000\000\000\
    \255\255\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\067\000\000\000\255\255\000\000\000\000\
    \255\255\255\255\255\255";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\019\000\020\000\000\000\013\000\000\000\000\000\074\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \019\000\021\000\022\000\000\000\014\000\023\000\074\000\024\000\
    \025\000\008\000\026\000\012\000\027\000\028\000\029\000\030\000\
    \031\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\033\000\034\000\035\000\036\000\037\000\038\000\
    \039\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\041\000\009\000\042\000\015\000\043\000\
    \004\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\044\000\045\000\046\000\005\000\016\000\
    \006\000\010\000\071\000\066\000\051\000\007\000\050\000\011\000\
    \067\000\048\000\052\000\068\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\053\000\000\000\062\000\062\000\062\000\062\000\
    \062\000\062\000\062\000\062\000\063\000\063\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \053\000\055\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\000\000\074\000\000\000\000\000\
    \000\000\017\000\000\000\000\000\000\000\000\000\000\000\055\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\055\000\000\000\010\000\074\000\000\000\000\000\000\000\
    \000\000\011\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\064\000\000\000\000\000\055\000\
    \000\000\000\000\000\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\000\000\000\000\000\000\
    \047\000\073\000\012\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\053\000\000\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\000\000\055\000\000\000\000\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\000\000\000\000\000\000\055\000\072\000\008\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\000\000\000\000\000\000\000\000\070\000\
    \000\000\255\255\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\000\000\000\000\000\000\000\000\
    \069\000\000\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\048\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \000\000\000\000\000\000\000\000\049\000\000\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \048\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\000\000\000\000\000\000\000\000\
    \049\000\000\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\048\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \000\000\000\000\000\000\000\000\049\000\000\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \056\000\000\000\056\000\000\000\000\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\060\000\000\000\060\000\000\000\059\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\053\000\059\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\063\000\
    \063\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\053\000\055\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\055\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\055\000\000\000\000\000\000\000\
    \000\000\000\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\055\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \000\000\000\000\000\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\000\000\000\000\000\000\000\000\000\000\000\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\000\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\000\000\000\000\000\000\000\000\069\000\000\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\000\000\000\000\000\000\
    \000\000\072\000\000\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \000\000\000\000\000\000\000\000\073\000\000\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\001\000\255\255\255\255\019\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\001\000\000\000\019\000\000\000\
    \000\000\017\000\000\000\005\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\007\000\000\000\001\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\002\000\015\000\
    \002\000\006\000\025\000\030\000\033\000\002\000\036\000\006\000\
    \030\000\048\000\051\000\067\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\031\000\255\255\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \032\000\031\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\255\255\074\000\255\255\255\255\
    \255\255\015\000\255\255\255\255\255\255\255\255\255\255\032\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\031\000\255\255\015\000\074\000\255\255\255\255\255\255\
    \255\255\015\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\031\000\255\255\255\255\032\000\
    \255\255\255\255\255\255\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\255\255\255\255\255\255\
    \000\000\023\000\001\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\054\000\255\255\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\255\255\054\000\255\255\255\255\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\255\255\255\255\255\255\054\000\024\000\002\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\255\255\255\255\255\255\255\255\028\000\
    \255\255\067\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\255\255\255\255\255\255\255\255\
    \028\000\255\255\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\040\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \255\255\255\255\255\255\255\255\040\000\255\255\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \043\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\255\255\255\255\255\255\255\255\
    \043\000\255\255\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\043\000\043\000\049\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \255\255\255\255\255\255\255\255\049\000\255\255\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \055\000\255\255\055\000\255\255\255\255\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\059\000\255\255\059\000\255\255\058\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\062\000\058\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\063\000\062\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\063\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\062\000\255\255\255\255\255\255\
    \255\255\255\255\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\063\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\065\000\065\000\065\000\065\000\065\000\065\000\
    \255\255\255\255\255\255\064\000\064\000\064\000\064\000\064\000\
    \064\000\255\255\255\255\255\255\255\255\255\255\255\255\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\255\255\065\000\065\000\065\000\065\000\065\000\065\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\255\255\255\255\255\255\255\255\069\000\255\255\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\069\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\255\255\255\255\255\255\
    \255\255\072\000\255\255\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\072\000\072\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \255\255\255\255\255\255\255\255\073\000\255\255\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255"
}

let rec main lexbuf = __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf state =
  match Lexing.engine lex_tables state lexbuf with
    0 -> (
# 108 "phobos_lexer.mll"
                          main lexbuf )
  | 1 -> (
# 109 "phobos_lexer.mll"
                          set_next_line lexbuf; main lexbuf )
  | 2 -> (
# 110 "phobos_lexer.mll"
                          TokId ("_", set_lexeme_position lexbuf) )
  | 3 -> (
# 111 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                           TokInt (int_of_string (Lexing.lexeme lexbuf), pos)
                        )
  | 4 -> (
# 114 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          let s = Lexing.lexeme lexbuf in
                           TokInt (int_of_string ("0o" ^ s), pos)
                        )
  | 5 -> (
# 118 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          let s = Lexing.lexeme lexbuf in
                           TokInt (int_of_string s, pos)
                        )
  | 6 -> (
# 122 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          let s = Lexing.lexeme lexbuf in
                           TokFloat (float_of_string s, pos)
                        )
  | 7 -> (
# 126 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          let s = Lexing.lexeme lexbuf in
                           TokQuotedId (String.sub s 1 (String.length s - 1), pos)
                        )
  | 8 -> (
# 130 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          let old_id = Lexing.lexeme lexbuf in
                          let id = String.lowercase old_id in
                          match id with 
                             "module" ->
                              TokModule pos
                           | "include" ->
                              TokInclude pos
                           | "declare" ->
                              TokDeclare pos
                           | "inline" ->
                              TokInline pos
                           | "terms" ->
                              TokTerms pos
                           | "grammar" ->
                              TokGrammar pos
                           | "tokens" ->
                              TokTokens pos
                           | "rewrites" ->
                              TokRewrites pos
                           | _ ->
                              TokId (old_id, pos)
                        )
  | 9 -> (
# 153 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          let old_id = Lexing.lexeme lexbuf in
                          let old_id = String.sub old_id 1 (String.length old_id - 1) in
                          let id = String.lowercase old_id in
                          match id with 
                           | "longest" ->
                              TokLongest pos
                           | "first" ->
                              TokFirst pos
                           | "start" ->
                              TokStart pos
                           | "extend" ->
                              TokExtend pos
                           | "remove" ->
                              TokRemove pos
                           | "override" ->
                              TokOverride pos
                           | _ ->
                              TokOption (old_id, pos)
                        )
  | 10 -> (
# 174 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          let old_id = Lexing.lexeme lexbuf in
                          let old_id = String.sub old_id 1 (String.length old_id - 1) in
                          let id = String.lowercase old_id in
                          match id with 
                           | "nonassoc" ->
                              TokNonAssoc pos
                           | "left" ->
                              TokLeftAssoc pos
                           | "right" ->
                              TokRightAssoc pos
                           | "prec" ->
                              TokPrec pos
                           | _ ->
                              raise (ParseError (pos, string_add ["Invalid directive ["; id; "]"]))
                        )
  | 11 -> (
# 191 "phobos_lexer.mll"
                          set_next_line lexbuf; main lexbuf )
  | 12 -> (
# 192 "phobos_lexer.mll"
                          comment lexbuf; main lexbuf )
  | 13 -> (
# 193 "phobos_lexer.mll"
                          comment lexbuf; main lexbuf )
  | 14 -> (
# 194 "phobos_lexer.mll"
                          set_string_start lexbuf;
                          string lexbuf;
                          let s, pos = pop_string lexbuf in
                           TokString(s, pos)
                        )
  | 15 -> (
# 202 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokAt pos )
  | 16 -> (
# 203 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokEq pos )
  | 17 -> (
# 204 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokRuleEq pos )
  | 18 -> (
# 205 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokArrow pos )
  | 19 -> (
# 206 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokDoubledArrow pos )
  | 20 -> (
# 207 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokIgnore pos )
  | 21 -> (
# 208 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokPipe pos )
  | 22 -> (
# 209 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokSemi pos )
  | 23 -> (
# 210 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokColon pos )
  | 24 -> (
# 211 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokComma pos )
  | 25 -> (
# 212 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokLeftBrace pos )
  | 26 -> (
# 213 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokRightBrace pos )
  | 27 -> (
# 214 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokLeftBrack pos )
  | 28 -> (
# 215 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokRightBrack pos )
  | 29 -> (
# 216 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokBang pos )
  | 30 -> (
# 217 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokDot pos )
  | 31 -> (
# 218 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokQuestionMark pos )
  | 32 -> (
# 219 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokLe pos )
  | 33 -> (
# 220 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in TokGe pos )
  | 34 -> (
# 222 "phobos_lexer.mll"
                          TokEof )
  | 35 -> (
# 223 "phobos_lexer.mll"
                          let pos = set_lexeme_position lexbuf in
                          raise (ParseError (pos, Printf.sprintf "illegal char: '%s'"
                          (String.escaped (Lexing.lexeme lexbuf))))
                        )
  | n -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_main_rec lexbuf n

and string lexbuf = __ocaml_lex_string_rec lexbuf 1
and __ocaml_lex_string_rec lexbuf state =
  match Lexing.engine lex_tables state lexbuf with
    0 -> (
# 229 "phobos_lexer.mll"
                          () )
  | 1 -> (
# 230 "phobos_lexer.mll"
                          set_next_line lexbuf; string lexbuf )
  | 2 -> (
# 231 "phobos_lexer.mll"
                          Buffer.add_char stringbuf '\n'; string lexbuf )
  | 3 -> (
# 232 "phobos_lexer.mll"
                          Buffer.add_char stringbuf '\t'; string lexbuf )
  | 4 -> (
# 233 "phobos_lexer.mll"
                          Buffer.add_char stringbuf '\''; string lexbuf )
  | 5 -> (
# 234 "phobos_lexer.mll"
                          Buffer.add_char stringbuf '"'; string lexbuf )
  | 6 -> (
# 235 "phobos_lexer.mll"
                          Buffer.add_string stringbuf (Lexing.lexeme lexbuf);
                          string lexbuf
                        )
  | n -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_string_rec lexbuf n

and comment lexbuf = __ocaml_lex_comment_rec lexbuf 2
and __ocaml_lex_comment_rec lexbuf state =
  match Lexing.engine lex_tables state lexbuf with
    0 -> (
# 240 "phobos_lexer.mll"
                          comment lexbuf; comment lexbuf )
  | 1 -> (
# 241 "phobos_lexer.mll"
                          comment lexbuf; comment lexbuf )
  | 2 -> (
# 242 "phobos_lexer.mll"
                          () )
  | 3 -> (
# 243 "phobos_lexer.mll"
                          () )
  | 4 -> (
# 244 "phobos_lexer.mll"
                          () )
  | 5 -> (
# 245 "phobos_lexer.mll"
                          set_next_line lexbuf;
                          comment lexbuf
                        )
  | 6 -> (
# 248 "phobos_lexer.mll"
                          comment lexbuf )
  | n -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf n

;;

