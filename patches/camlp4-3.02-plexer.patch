--- lib/plexer.ml.mp-plex	Mon Jul  2 22:46:44 2001
+++ lib/plexer.ml	Sun Sep 23 12:13:00 2001
@@ -325,22 +325,31 @@
     | [: a = quotation bp (store len '>') :] -> a ]
   and left_paren bp =
     parser
-    [ [: `'*'; _ = comment bp; a = next_token :] -> a
+    [ [: `'*'; s :] -> comment 0 0 bp s
     | [: :] ep -> keyword_or_error (bp, ep) "(" ]
-  and comment bp =
+  and comment len level bp =
     parser
-    [ [: `'('; s :] -> left_paren_in_comment bp s
-    | [: `'*'; s :] -> star_in_comment bp s
-    | [: `c; s :] -> comment bp s
+    [ [: `'('; s :] -> let len = store len '(' in left_paren_in_comment len level bp s
+    | [: `'*'; s :] -> let len = store len '*' in star_in_comment len level bp s
+    | [: `c; s :] -> let len = store len c in comment len level bp s
     | [: :] ep -> err (bp, ep) "comment not terminated" ]
-  and left_paren_in_comment bp =
+  and left_paren_in_comment len level bp =
     parser
-    [ [: `'*'; s :] -> do { comment bp s; comment bp s }
-    | [: a = comment bp :] -> a ]
-  and star_in_comment bp =
-    parser
-    [ [: `')' :] -> ()
-    | [: a = comment bp :] -> a ]
+    [ [: `'*'; s :] -> let len = store len '*' in comment len (succ level) bp s
+    | [: a = comment len level bp :] -> a ]
+  and star_in_comment len level bp =
+    parser
+    [ [: `')'; s :] ->
+         if level = 0 then
+            let text = get_buff (pred len) in
+               if String.length text <> 0 && text.[0] = '!' then
+                  (("COMMENT", text), (bp, succ bp))
+               else
+                  next_token s
+         else
+            let len = store len ')' in
+               comment len (pred level) bp s
+    | [: a = comment len level bp :] -> a ]
   and linenum bp =
     parser
     [ [: `'0'..'9'; _ = digits; _ = spaces_tabs; `'"'; _ = any_to_nl; s :] ->
@@ -453,7 +462,7 @@
                     "\" does not respect Plexer rules")) ]
   | "LIDENT" | "UIDENT" | "TILDEIDENT" | "TILDEIDENTCOLON" | "QUESTIONIDENT" |
     "QUESTIONIDENTCOLON" | "INT" | "FLOAT" | "CHAR" | "STRING" | "QUOTATION" |
-    "ANTIQUOT" | "LOCATE" | "EOI" ->
+    "ANTIQUOT" | "LOCATE" | "EOI" | "COMMENT" ->
       ()
   | _ ->
       raise
@@ -478,6 +487,7 @@
   | ("INT", s) -> "'" ^ s ^ "'"
   | ("FLOAT", "") -> "float"
   | ("STRING", "") -> "string"
+  | ("COMMENT", "") -> "comment"
   | ("CHAR", "") -> "char"
   | ("QUOTATION", "") -> "quotation"
   | ("ANTIQUOT", k) -> "antiquot \"" ^ k ^ "\""
