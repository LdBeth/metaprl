# cd "/fol_not";;
- : string = "/fol_not"
# ls ();;

--+--theory--+--
Theory listing for package: fol_not; path: /fol_not
Implementation:
    include Fol_false
    include Fol_implies
    open Mp_resource
    open Refiner.Refiner.RefineError
    declare Fol_not!not{'A}
    prec prec_not
    dform not_df : prec[prec_not] :: parens ::  Fol_not!not{'A} = їA
     rewrite unfold_not (їA) ЯЭЭЮ (A ќћ False)
    * axiom not_type H : [ext] H џ A type ЭЭЮ [ext] H џ (їA) type
    * axiom not_intro H x :
        [ext] H џ A type ЭЭЮ
        [ext] H; x: A џ False ЭЭЮ
        [ext] H џ їA
    * axiom not_elim H J :
        [ext] H; x: їA; J[x] џ A ЭЭЮ
        [ext] H; x: їA; J[x] џ C[x]
    let d_not_type = ...
    let not_type_term = ...
    let d_resource = ...
    let d_not = ...
    let not_term = ...
    let d_resource = ...
    Summary!id[820346913:n]
    
end
--+--theory--+--
- : unit = ()
# 