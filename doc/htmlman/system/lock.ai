%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (Jason Hickey) (Cornell University)
%%Title: (lock.ai)
%%CreationDate: (9/10/98) (9:05 PM)
%%BoundingBox: 13 352 488 756
%%HiResBoundingBox: 13.361 352.1459 487.2499 755.9166
%%DocumentProcessColors: Magenta Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%DocumentCustomColors: (Light Blue)
%%+ (Light Green)
%%+ (Light Magenta)
%%CMYKCustomColor: 0.1 0 0 0 (Light Blue)
%%+ 0.1 0 0.1 0 (Light Green)
%%+ 0 0.1 0 0 (Light Magenta)
%%RGBCustomColor: 0.1059 0.3059 0.851 (Back blue)
%%+ 0.9608 1 0.3725 (Bright Yellow)
%%+ 0.2078 0.3569 0.651 (Buff Blue)
%%+ 0.9098 0.5922 0 (Burnt Orange)
%%+ 0 0.5882 0.4706 (Forest Green)
%%+ 1 0.9608 0.6588 (Light Yellow)
%%+ 0.502 0.3843 0.7412 (Tool Purple)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 8 37 600 781
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 82 828 1.5 698 716 18 0 1 5 46 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:8 37
%%AI3_PaperRect:-8 784 604 -8
%%AI3_Margin:8 -40 -9 8
%AI7_GridSettings: 12 1 12 1 0 0 0.833333 0.833333 0.833333 0.833333 0.833333 0.833333
%AI7_Thumbnail: 128 112 8
%%BeginData: 13624 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD09FFF8F8FFFFFFF8F8FD79FFF8FFFFFFF8FFF8FD7AFFF8FFF8FD
%38FFF8FD04FFF8F8FD3EFFF8F8FD38FFF8F8FD04FFF8F8FD3EFFF8F8FD39
%FFF8FFFFFFF8FD41FFF8FD3AFFF8F8F8FD42FFF8FD3AFFF8F8FD43FFF8FD
%3AFFF8F8FD3FFFFD18F8FD28FFF8FD3FFFF8CAFFCAF8CAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFF8FD28FFF8FD3FFFF8FFCBFFF8FFCBFFCBFFCBFF
%CBFFCBFFCBFFCBFFCBFFCBF8FD24FFFD18F8FD2CFFF8CAFFA8FFF8FFA8F8
%F8FFA8FFCAFFA8FFCAFFA8FFCAFFF8FD24FFF8CAFFA8F8CAFFA8FFCAFFA8
%FFCAFFA8FFCAFFA8FFCAFFF8FD2CFFF8FFCBFFF8F8CBFFF8F8CBFFF8F8CB
%FFCBFFCBFFCBFFCBF8FD24FFF8FFCBFFF8FFCBFFCBFFCBFFCBFFCBFFCBFF
%CBFFCBFFCBF8FFFFFD18F8FD12FFF8CAFFCAFFF8FFCAF8CAFFF8F8F8FFCA
%FFCAFFCAFFCAFFF8FD24FFF8CAFFCAF8CAFFCAFFCAFFCAFFCAFFCAFFCAFF
%CAFFCAFFF8FFFFF8A8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FF
%F8FD12FFF8FFCBFFCBFFF8FFF8F8F8FFCBFFCBFFCBFFCBFFCBFFCBF8FD24
%FFF8FFCBFFF8F8CBFFF8F8CBFFCBFFCBFFCBFFCBFFCBFFCBF8FFFFF8FFAF
%FFAFFFAFFFAFA859FFAFA8AFFF7DFF84FFAFFFAFF8FD12FFF8A8FFCAFFA8
%F8F8F8A8FFCAFFA8FFCAFFA8FFCAFFA8FFF8FD24FFF8A8FFCAF8F8FFCAF8
%A8FFCAF8F8FFCAFFA8FFCAFFA8FFF8FFFFF8A9FFF8F8F8FFA8FF53A8A8FF
%53A8A8A8A9A8A8FFA9FFF8FF272721FD0EFFF8FFCBFFCBFFF8F8CBFFCBFF
%CBFFCBFFCBFFCBFFCBFFCBF8FD24FFF8FFCBFFCBF8CBFFF8FFFD04F8CBFF
%CBFFCBFFCBFFCBF8FFFFF8FFAFF8F8F8AFFFAFA87DFFAFA87DFF84FF7DFF
%AFFFAFF8FF4B274C274B274C274B27FD07FFF8CAFFCAFFCAFFF8FFCAFFCA
%FFCAFFCAFFCAFFCAFFCAFFF8FD24FFF8CAFFCAFFCAFD04F8FFCAFFCAFFCA
%FFCAFFCAFFCAFFF8FFFFF8AFFFA8F8F8FFA8FFAFFFA8FF84FFA8FFAFA8A8
%FFAFFFF8FFFF27FD06FF2727FD07FFFD18F8FD24FFF8FFCBFFCBFFFD06F8
%CBFFCBFFCBFFCBFFCBFFCBF8FFFFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFF8FD1BFFF8FD32FFF8CAFFA8FFCAFFF8FFCAFFA8FFFD04
%F8CAFFA8FFCAFFF8FFFFFD18F8FD1BFFF8FD32FFFD18F8FFFFF8FFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FD1CFFF8FD44FFF8F8FD05
%FFF8A8FFAFF8A8FFAFFF7DFF7DA87DFFAFA87DA8AFFFA8FFF8FD1AFFFD18
%F8FD31FFF8F8FFFFFFF8FFAFF8F8F8AFFFAF7DAFFF84A859A884A87DFFAF
%FFAFF8FD1AFFF8A8FFF8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFF8
%FFFFFD32F8FFFFF8A9FFF8F8F8FFA8FF7DFF52FF7D7D527D7EA8A8FFA9FF
%F8FD0CFFF8FD0DFFF8FFAFF8F8F8AFFFAFFFAFA8AFFFAFFF7DFF84FFAFFF
%AFF8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEF8F8FFF8FFF8F8F8FFAFFF
%AFFFAFFFAFFFAFFFAFA8AFFFAFFF84FFAFFFAFF8FD0BFFFD0AF8FD05FFF8
%A8FFFD04F8AFFF52FF7DFF7DA87DA8A8A8AFFFA8FFF8FFFFF8AECFA8FFAE
%CFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8
%FFAECFA8FFAECFA8FD05F8FFFFFFFD18F8FD0BFFF8F8F8FD05FFF8F8FD05
%FFF8FFAFF8F8F8AFFFAFA8AFA8AFA859A884FF7DFFAFFFAFF8FFFFF8FFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFFD05F8FFFFFFF8FFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFF8FD13FFF8F8FD05FFF8A9FFA8FFA9FFA8FFA9FF
%A8FF7EFFA8FFA9A8A8FFA9FFF8FFFFF8A8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%F8F8A8F8FFFFFFF8F8FFA9FFA8FFA9FF7DFF7DA87DFFA9A87DA8A9FFA8FF
%F8FD1AFFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FFFF
%F8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEF8F8FFF8FFFFFFF8FFF8FFF8F8AFFF
%AF7DAFA87DA87DA884A884FFAFFFAFF8FD1AFFFD18F8FFFFF8A8FFAECFA8
%FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAE
%CFA8FFAECFA8FFAEF8F8F8AEF8FFFFFFF8A8FFFD04F8AFFF7DFF7DA87DA8
%7DA87DA8AFFFA8FFF8FD1AFFF8FFAFFFAFFFAFFFAFA8AFA884A8AFFF7DFF
%84FFAFFFAFF8FFFFF8FFAEF8F8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFF8F8F8FFF8FFFFFF
%F8FFAFF8F8F8AFFFAFFFAFFFAFA8AFFFAFFF84FFAFFFAFF8FD1AFFF8A8FF
%A9F8F8FFA9FF52FF7EA8527D7DA87DA8A9FFA8FFF8FFFFF8A8FD04F8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA8FFA8CFFD04F8A8F8FFFFFFF8A9FFA8F8A9FFA8FFA9FFA8FFA9FFA8FF
%A9FFA8FFA9FFF8FD1AFFF8FFAFFD04F8FFAFA8AF7D84A87DA859FF84FFAF
%FFAFF8FFFFF8FFFD04F8AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFFD05F8FFF8FFFFFFFD18F8FD1AFF
%F8A8FFAFF8F8FFAFFFA8FFAFFF7DFFAFFFA8A8AFFFA8FFF8FFFFF8AEFD04
%F8CFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECF
%A8FFAECFA8FFAEFD05F8A8F8FFFFFFF8AFFFA8F8AFFFA8FFAFFFA8FFAFFF
%A8FFAFFFA8FFAFFFF8FD1AFFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFF8FFFFF8FFAEF8F8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFF8F8F8FFF8FFFFFF
%F8FFAFFFF8F8AFFFAFA8AFA8AFA8AFFFAFA884FFAFFFAFF8FFFFF8FD17FF
%FD18F8FFFFF8A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFF8CFA8FFA8F8FFFFFFF8A8FF
%F8F8F8FFA9FF52A87DFF527D7DA852A8A9FFA8FFF8FFFD0AF8FD0FFFF8FF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FFFFF8FFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEF8AEFFAEFFF8FFFFFFF8FFAFF8F8F8AFFFAFA8847DAFA8
%7DA87D7D84FFAFFFAFF8FFF8F8F8FD05FFF8F8FD0FFFF8AFFFA8FFAFFFA8
%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFF8FFFFF8A8FFAECFA8FFAECFA8FFAE
%CFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8
%FFF8CFA8FFAEF8FFFFFFF8A8FFAFFFA8FFAFFFA8FFAFFF7DFFAFFFA8A8AF
%FFA8FFF8FD09FFF8F8FD0FFFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFF8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEF8AEFFAEFFF8FFFFFF
%FD18F8FD1AFFF8A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFF8
%FFFFF8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8FFA8F8A8FFA8CFA8F8FFFFFFF8A9FFA8FFA9
%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFF8FD1AFFF8FFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFF8
%FFAEFFAEFFF8FFFFFFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFF8FD1AFFF8A8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFF8
%FFFFF8AECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8
%FFAECFA8FFAECFA8FFAECFA8FFAEF8A8FFAECFA8F8FFFFFFF8AFFFA8FFAF
%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFF8FD1AFFFD18F8FFFFF8FFAEFF
%AEFFAEFFAEFFAEFFAEF8F8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFF8FFAEFFAEFFF8FFFFFFF8FFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFF8FD1AFFF8A9FFA8FFA9FFA8FF7EFF52FF7EFF
%A8FF7DA8A8FFA9FFF8FFFFF8A8FFA8CFA8FFA8CFA8FFA8CFF8F8F8CFA8FF
%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFF8FFA8CFA8FFA8F8
%FFFFFFF8A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFF8FD1AFF
%F8FFAFFFF8F8AFFFAF7D7DA8AFA87DA884A87DFFAFFFAFF8FFFFF8FFAEFF
%AEFFAEFFAEFFAEFFAEFFFD05F8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEF8AEFFAEFFAEFFF8FFFFFFF8FFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFF8FD1AFFF8AFFFFD04F8A8FF7DA852FF7D7D7DA852
%A8A8FFAFFFF8FFFFF8A8FFAECFA8FFAECFA8FFAECFA8FD06F8CFA8FFAECF
%A8FFAECFA8FFAECFA8FFAECFA8FFAECFF8FFAECFA8FFAEF8FFFFFFFD18F8
%FD1AFFF8FFAFFFF8F8AFFFAFFFAFFFAFA8AFFFAFFF84FFAFFFAFF8FFFFF8
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFD04F8FFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEF8AEFFAEFFAEFFF8FFFFFFF8FFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFF8FD1AFFF8A8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA9FFA8FFA9FFA8FFF8FFFFF8A8CFA8FFA8CFA8FFA8CFA8FFA8CFFD04
%F8A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8F8A8CFA8FFA8CFA8
%F8FFFFFFF8A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFF8FD1A
%FFFD18F8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFFD04F8AEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFF8FFAEFFAEFFAEFFF8FFFFFFF8FFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FD1AFFF8A8FFAFFFA8
%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFF8FFFFF8AECFA8FFAECFA8FFAE
%CFA8FFAECFA8FFAECFA8F8AECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8
%F8AECFA8FFAECFA8F8FFFFFFF8AFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF
%FFA8FFAFFFF8FD1AFFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFF8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEF8F8FFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFF8FFAEFFAEFFAEFFF8FFFFFFF8FFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FD1AFFF8A9FFA8FFA9
%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFF8FFFFF8A8FFA8CFA8FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8F8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFF8
%CFA8FFA8CFA8FFA8F8FFFFFFFD18F8FD1AFFF8FFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFF8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEF8AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEF8AEFFAEFFAEFF
%AEFFF8FD35FFF8AFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFF8
%FFFFF8A8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAEF8F8FFAE
%CFA8FFAECFA8FFAECFA8FFF8CFA8FFAECFA8FFAEF8FD35FFF8FFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FFFFF8FFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEF8AEFFAEFFAEFFAEFFAEFFAEFFF8FF
%AEFFAEFFAEFFAEFFF8FD35FFFD18F8FFFFF8A8CFA8FFA8CFA8FFA8CFA8FF
%A8A7A8A87DA7A8FF7DA77DFFA8F8F8FFA8CFA8FFA8CFA8FFA8F8A8FFA8CF
%A8FFA8CFA8F8FD35FFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFF8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAEFF58FF83A87DA883A87DA8AE
%FFAEF8F8FFAEFFAEFFAEFFAEFFF8FFAEFFAEFFAEFFAEFFF8FD35FFF8A8FF
%AFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFF8FFFFF8AECFA8FFAECF
%A8FFAECFA8FFAEA7A8A87DA752A87DA77DFFAECFA8F8AECFA8FFAECFA8FF
%AEF8A8FFAECFA8FFAECFA8F8FD35FFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFF8FFFFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF83
%FFAEFFAEA8AEFFAEFFAEF8F8FFAEFFAEFFAEF8AEFFAEFFAEFFAEFFAEFFF8
%FD10FFF8FD24FFF8A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF
%F8FFFFF8A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8F8F8CFA8FFA8CFF8FFA8CFA8FFA8CFA8FFA8F8FD0AFFF8F8FFFFFF
%F8F8FD24FFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FF
%FFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEF8AEFFAEFFAEF8AEFFAEFFAEFFAEFFAEFFF8FD0AFFF8FFFFFFF8FD26
%FFFD18F8FFFFF8A8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAE
%CFA8FFAECFA8FFAEF8F8FFAECFF8FFAECFA8FFAECFA8FFAEF8FD0BFFF8FF
%F8FD41FFF8FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFF8FFF8FFAEFFAEFFAEFFAEFFAEFFF8FD0BFFF8F8FD42
%FFF8A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8FD04F8CFA8FFA8CFA8FFA8CFA8F8FD0BFFF8F8FD42FFF8FFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFFD05F8FFAEFFAEFFAEFFAEFFF8FD0CFFF8FD42FFF8AECFA8FFAECFA8FF
%AECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAEFD04F8CFA8
%FFAECFA8FFAECFA8F8FD0CFFF8FD42FFF8FFAEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEF8F8FFAEFFAEFFAEFF
%AEFFAEFFF8FD0CFFF8FD42FFFD31F8FD09FFFD17F8FD69FFF8FFCBF8CBFF
%CBFFCBFFCBFFCBFFF8F8CBFFCBFFCBFFF8FD69FFF8CAFFCAF8CAFFCAFFCA
%FFCAFFCAF8CAFFCAFFCAFFCAF8FD47FFFD18F8FD0AFFF8FFCBFFF8FFCBF8
%F8FFCBFFCBF8F8FFCBFFCBFFCBFFF8FD3CFF27FD0AFFF8A9FFA8FFA9FFA8
%FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFF8FD0AFFF8A8FFF8F8A8FFF8F8A8FF
%F8F8F8FFCAFFA8FFCAFFA8F8FD3BFF274B274C274B274C274BFFFFF8FFAF
%FFF8F8AFFFAFA8AFA8AFA8AFFF7DFF84FFAFFFAFF8FD0AFFF8FFCBFFF8FF
%CBF8CBFFF8F8F8FFCBFFCBFFCBFFCBFFF8FD3BFF272727FD05FF2727FFFF
%F8AFFFA8F8F8F8A8FF59FF7DFF7D7D7DA8AFA8A8FFAFFFF8FD0AFFF8CAFF
%CAFFF8FFF8F8F8FFCAF8CAFFCAFFCAFFCAFFCAF8FD43FF274B27FFF8FFAF
%FFF8F8AFFFAFA8AFA8AFA87DA87DFF84FFAFFFAFF8FD0AFFF8FFCBFFCBFD
%04F8FFCBF8CBFFCBFFCBFFCBFFCBFFF8FD47FFF8A8FFA9FFA8FFA9FFA8FF
%A9FF7DFFA9FFA8A8A9FFA8FFF8FD0AFFFD07F8A8FFCAF8A8FFCAFFA8FFCA
%FFA8FFCAF8FD47FFFD18F8FD07FFFD1AF8FD47FFF8A8FFAFFFA8FFAFFFA8
%FFAFFFA8FFAFFFA8FFAFFFA8FFF8FFFFFFFD04F8FD0CFFF8FD48FFF8F8F8
%FD09FFF8FFAFFFF8F8AFFFAFA8AFA884A8AFFF84FFAFA8AFFFAFFD04F8FD
%0FFFF8FD49FFFD0AF8FFFFF8A9FFA8F8F8F8A8FF53FF7DA87D7D52FF7EFF
%52FFF8F8F8FD11FFF8FD4BFFF8FD06FFF8F8F8FFF8FFAFFFF8F8F8FFAFA8
%AF7D84A87DA859FFAFA8AFFFAFF8FD10FFF8FD57FFF8AFFFA8FFF8FFA8FF
%AFFFA8FF84FFA8FFAFFF7DFFAFFFF8FD0FFFF8FD58FFF8FFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FD0EFFF8FD59FFFD18F8FD0CFFF8
%F8FD5AFFF8FFAFFFAFFFAFFFAFFFAFA884FFAFFF7DFFAFA8AFFFAFF8FD0A
%FFF8F8FD5CFFF8A8FFAFF8F8FFAFFF52FF84A87DA87DA87DFF7DFFA8FFF8
%FFFFF8F8FFFFFFF8F8F8FD5EFFF8FFAFFFF8F8F8FFAFA8AFA884A859A884
%A8AFA8AFFFAFFD08F8FD61FFF8A9FFA8F8F8FFA8FFA9FFA8FF7EFFA8FFA9
%FF7DFFA9FFF8FFFFF8F8FD64FFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFF8FD68FFFD18F8FD68FFF8FFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFF8FD5EFF2727FD08FFF8A8FFA9F8F8FFA9FF7DFF7D
%FF7DFFA9FF52FF7EFFA8FFF8FD5DFF4C274B274C274B274C27FFF8FFAFFF
%F8F8F8FFAF7D84A8AFA87DA87DA8AFA8AFFFAFF8FD5EFF2727FD05FF2727
%27F8A8FFAFF8F8F8AFFF7DA852FF7DA87DA852FF7DFFA8FFF8FD68FFF8FF
%AFFFAFFFAFFFAFFFAFFFAFA8AFFFAFFFAFA8AFFFAFF8FD68FFFD18F8FD68
%FFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FD68FFF8AF
%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFF8FD68FFF8FFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFF8FD68FFF8A8FFA9FFA8FFA9
%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFF8FD68FFF8FFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFF8FD68FFF8A8FFAFFFA8FFAFFFA8FFAFFFA8
%FFAFFFA8FFAFFFA8FFF8FD68FFFD18F8FD68FFF8A9FFA8FFA9FFA8FFA9FF
%A8FFA9FFA8FFA9FFA8FFA9FFF8FD68FFF8FFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFF8FD68FFF8AFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FF
%AFFFA8FFAFFFF8FD68FFF8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFF8FD68FFF8A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF
%F8FD68FFFD18F8FDFCFFFDAAFFFF
%%EndData%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			dup length 1 sub
			1 exch
			getinterval
			
			cvn
			findfont
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
					findfont
					[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot 174/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType%AI5_BeginPalette
0 0 Pb
0.1 0 0 0 (Light Blue) 0 x
(Light Blue) Pc
0.1 0 0.1 0 (Light Green) 0 x
(Light Green) Pc
0 0.1 0 0 (Light Magenta) 0 x
(Light Magenta) Pc
0.9608 1 0.3725 (Bright Yellow) 0 1 Xx
(Bright Yellow\012  1) Pc
0 0.5882 0.4706 (Forest Green) 0 1 Xx
(Forest Green) Pc
0.2078 0.3569 0.651 (Buff Blue) 0 1 Xx
(Buff Blue) Pc
1 0.9608 0.6588 (Light Yellow) 0 1 Xx
(Light Yellow\012  1) Pc
0.9098 0.5922 0 (Burnt Orange) 0 1 Xx
(Burnt Orange\012  1) Pc
0.1059 0.3059 0.851 (Back blue) 0 1 Xx
(Back blue\012  1) Pc
0.502 0.3843 0.7412 (Tool Purple) 0 1 Xx
(Tool Purple\012  1) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Background) Ln
0 A
1 Ap
0 O
0.1 0 0.1 0 (Light Green) 0 x
0 R
0 0 0 1 K
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
169.9995 506.0001 m
168.8955 506.0001 167.9999 506.8961 167.9999 508.0007 C
167.9999 666.6661 L
167.9999 667.7707 168.8955 668.6667 169.9995 668.6667 C
343.3336 668.6667 L
344.4376 668.6667 345.3333 667.7707 345.3333 666.6661 C
345.3333 508.0007 L
345.3333 506.8961 344.4376 506.0001 343.3336 506.0001 C
169.9995 506.0001 L
b0.1 0 0 0 (Light Blue) 0 x
155.9999 527.9998 m
155.9999 671.9998 L
71.9999 671.9998 L
71.9999 527.9998 L
155.9999 527.9998 L
b443.9999 564.0001 m
443.9999 708.0001 L
359.9999 708.0001 L
359.9999 564.0001 L
443.9999 564.0001 L
b341.6666 352.6459 m
341.6666 496.646 L
257.6665 496.646 L
257.6665 352.6459 L
341.6666 352.6459 L
buu0 Ap
0 0 0 XA
0 w-156.0003 876.0001 m
-156.0003 -107.9999 l
(S) *
-143.9999 875.9998 m
-143.9999 -108.0002 l
(S) *
-132.0001 876.0001 m
-132.0001 -107.9999 l
(S) *
-120.0001 875.9998 m
-120.0001 -108.0002 l
(S) *
-108.0003 876.0001 m
-108.0003 -107.9999 l
(S) *
-95.9999 875.9998 m
-95.9999 -108.0002 l
(S) *
-84.0001 876.0001 m
-84.0001 -107.9999 l
(S) *
-72.0001 875.9998 m
-72.0001 -108.0002 l
(S) *
-60.0003 876.0001 m
-60.0003 -107.9999 l
(S) *
-47.9999 875.9998 m
-47.9999 -108.0002 l
(S) *
-36.0001 876.0001 m
-36.0001 -107.9999 l
(S) *
-24.0001 875.9998 m
-24.0001 -108.0002 l
(S) *
-12.0003 876.0001 m
-12.0003 -107.9999 l
(S) *
0.0001 875.9998 m
0.0001 -108.0002 l
(S) *
11.9999 876.0001 m
11.9999 -107.9999 l
(S) *
23.9999 875.9998 m
23.9999 -108.0002 l
(S) *
35.9996 876.0001 m
35.9996 -107.9999 l
(S) *
48.0001 875.9998 m
48.0001 -108.0002 l
(S) *
59.9999 876.0001 m
59.9999 -107.9999 l
(S) *
71.9999 875.9998 m
71.9999 -108.0002 l
(S) *
83.9996 876.0001 m
83.9996 -107.9999 l
(S) *
96.0001 875.9998 m
96.0001 -108.0002 l
(S) *
107.9999 876.0001 m
107.9999 -107.9999 l
(S) *
119.9999 875.9998 m
119.9999 -108.0002 l
(S) *
131.9996 876.0001 m
131.9996 -107.9999 l
(S) *
144.0001 875.9998 m
144.0001 -108.0002 l
(S) *
155.9999 876.0001 m
155.9999 -107.9999 l
(S) *
167.9999 875.9998 m
167.9999 -108.0002 l
(S) *
179.9996 876.0001 m
179.9996 -107.9999 l
(S) *
192.0001 875.9998 m
192.0001 -108.0002 l
(S) *
203.9999 876.0001 m
203.9999 -107.9999 l
(S) *
215.9999 875.9998 m
215.9999 -108.0002 l
(S) *
227.9996 876.0001 m
227.9996 -107.9999 l
(S) *
240.0001 875.9998 m
240.0001 -108.0002 l
(S) *
251.9999 876.0001 m
251.9999 -107.9999 l
(S) *
263.9999 875.9998 m
263.9999 -108.0002 l
(S) *
275.9996 876.0001 m
275.9996 -107.9999 l
(S) *
288.0001 875.9998 m
288.0001 -108.0002 l
(S) *
299.9999 876.0001 m
299.9999 -107.9999 l
(S) *
311.9999 875.9998 m
311.9999 -108.0002 l
(S) *
323.9996 876.0001 m
323.9996 -107.9999 l
(S) *
336.0001 875.9998 m
336.0001 -108.0002 l
(S) *
347.9999 876.0001 m
347.9999 -107.9999 l
(S) *
359.9999 875.9998 m
359.9999 -108.0002 l
(S) *
371.9996 876.0001 m
371.9996 -107.9999 l
(S) *
384.0001 875.9998 m
384.0001 -108.0002 l
(S) *
395.9999 876.0001 m
395.9999 -107.9999 l
(S) *
407.9999 875.9998 m
407.9999 -108.0002 l
(S) *
419.9996 876.0001 m
419.9996 -107.9999 l
(S) *
432.0001 875.9998 m
432.0001 -108.0002 l
(S) *
443.9999 876.0001 m
443.9999 -107.9999 l
(S) *
455.9999 875.9998 m
455.9999 -108.0002 l
(S) *
467.9996 876.0001 m
467.9996 -107.9999 l
(S) *
480.0001 875.9998 m
480.0001 -108.0002 l
(S) *
491.9999 876.0001 m
491.9999 -107.9999 l
(S) *
503.9999 875.9998 m
503.9999 -108.0002 l
(S) *
515.9996 876.0001 m
515.9996 -107.9999 l
(S) *
528.0001 875.9998 m
528.0001 -108.0002 l
(S) *
539.9999 876.0001 m
539.9999 -107.9999 l
(S) *
551.9999 875.9998 m
551.9999 -108.0002 l
(S) *
563.9996 876.0001 m
563.9996 -107.9999 l
(S) *
576.0001 875.9998 m
576.0001 -108.0002 l
(S) *
587.9999 876.0001 m
587.9999 -107.9999 l
(S) *
599.9999 875.9998 m
599.9999 -108.0002 l
(S) *
611.9996 876.0001 m
611.9996 -107.9999 l
(S) *
624.0001 875.9998 m
624.0001 -108.0002 l
(S) *
635.9999 876.0001 m
635.9999 -107.9999 l
(S) *
647.9999 875.9998 m
647.9999 -108.0002 l
(S) *
659.9996 876.0001 m
659.9996 -107.9999 l
(S) *
672.0001 875.9998 m
672.0001 -108.0002 l
(S) *
683.9999 876.0001 m
683.9999 -107.9999 l
(S) *
695.9999 875.9998 m
695.9999 -108.0002 l
(S) *
707.9996 876.0001 m
707.9996 -107.9999 l
(S) *
720.0001 875.9998 m
720.0001 -108.0002 l
(S) *
731.9999 876.0001 m
731.9999 -107.9999 l
(S) *
743.9999 875.9998 m
743.9999 -108.0002 l
(S) *
755.9996 876.0001 m
755.9996 -107.9999 l
(S) *
768.0001 875.9998 m
768.0001 -108.0002 l
(S) *
779.9999 876.0001 m
779.9999 -107.9999 l
(S) *
791.9999 875.9998 m
791.9999 -108.0002 l
(S) *
803.9996 876.0001 m
803.9996 -107.9999 l
(S) *
816.0001 875.9998 m
816.0001 -108.0002 l
(S) *
827.9999 876.0001 m
827.9999 -107.9999 l
(S) *
Uu827.9996 876.0003 m
-156.0003 876.0003 l
(S) *
827.9994 863.9998 m
-156.0006 863.9998 l
(S) *
827.9996 852.0001 m
-156.0003 852.0001 l
(S) *
827.9994 840.0001 m
-156.0006 840.0001 l
(S) *
827.9996 828.0003 m
-156.0003 828.0003 l
(S) *
827.9994 815.9998 m
-156.0006 815.9998 l
(S) *
827.9996 804.0001 m
-156.0003 804.0001 l
(S) *
827.9994 792.0001 m
-156.0006 792.0001 l
(S) *
827.9996 780.0003 m
-156.0003 780.0003 l
(S) *
827.9994 767.9998 m
-156.0006 767.9998 l
(S) *
827.9996 756.0001 m
-156.0003 756.0001 l
(S) *
827.9994 744.0001 m
-156.0006 744.0001 l
(S) *
827.9996 732.0003 m
-156.0003 732.0003 l
(S) *
827.9994 719.9998 m
-156.0006 719.9998 l
(S) *
827.9996 708.0001 m
-156.0003 708.0001 l
(S) *
827.9994 696.0001 m
-156.0006 696.0001 l
(S) *
827.9996 684.0003 m
-156.0003 684.0003 l
(S) *
827.9994 671.9998 m
-156.0006 671.9998 l
(S) *
827.9996 660.0001 m
-156.0003 660.0001 l
(S) *
827.9994 648.0001 m
-156.0006 648.0001 l
(S) *
827.9996 636.0003 m
-156.0003 636.0003 l
(S) *
827.9994 623.9998 m
-156.0006 623.9998 l
(S) *
827.9996 612.0001 m
-156.0003 612.0001 l
(S) *
827.9994 600.0001 m
-156.0006 600.0001 l
(S) *
827.9996 588.0003 m
-156.0003 588.0003 l
(S) *
827.9994 575.9998 m
-156.0006 575.9998 l
(S) *
827.9996 564.0001 m
-156.0003 564.0001 l
(S) *
827.9994 552.0001 m
-156.0006 552.0001 l
(S) *
827.9996 540.0003 m
-156.0003 540.0003 l
(S) *
827.9994 527.9998 m
-156.0006 527.9998 l
(S) *
827.9996 516.0001 m
-156.0003 516.0001 l
(S) *
827.9994 504.0001 m
-156.0006 504.0001 l
(S) *
827.9996 492.0003 m
-156.0003 492.0003 l
(S) *
827.9994 479.9998 m
-156.0006 479.9998 l
(S) *
827.9996 468.0001 m
-156.0003 468.0001 l
(S) *
827.9994 456.0001 m
-156.0006 456.0001 l
(S) *
827.9996 444.0003 m
-156.0003 444.0003 l
(S) *
827.9994 431.9998 m
-156.0006 431.9998 l
(S) *
827.9996 420.0001 m
-156.0003 420.0001 l
(S) *
827.9994 408.0001 m
-156.0006 408.0001 l
(S) *
827.9996 396.0003 m
-156.0003 396.0003 l
(S) *
827.9994 383.9998 m
-156.0006 383.9998 l
(S) *
827.9996 372.0001 m
-156.0003 372.0001 l
(S) *
827.9994 360.0001 m
-156.0006 360.0001 l
(S) *
827.9996 348.0003 m
-156.0003 348.0003 l
(S) *
827.9994 335.9998 m
-156.0006 335.9998 l
(S) *
827.9996 324.0001 m
-156.0003 324.0001 l
(S) *
827.9994 312.0001 m
-156.0006 312.0001 l
(S) *
827.9996 300.0003 m
-156.0003 300.0003 l
(S) *
827.9994 287.9998 m
-156.0006 287.9998 l
(S) *
827.9996 276.0001 m
-156.0003 276.0001 l
(S) *
827.9994 264.0001 m
-156.0006 264.0001 l
(S) *
827.9996 252.0003 m
-156.0003 252.0003 l
(S) *
827.9994 239.9998 m
-156.0006 239.9998 l
(S) *
827.9996 228.0001 m
-156.0003 228.0001 l
(S) *
827.9994 216.0001 m
-156.0006 216.0001 l
(S) *
827.9996 204.0003 m
-156.0003 204.0003 l
(S) *
827.9994 191.9998 m
-156.0006 191.9998 l
(S) *
827.9996 180.0001 m
-156.0003 180.0001 l
(S) *
827.9994 168.0001 m
-156.0006 168.0001 l
(S) *
827.9996 156.0003 m
-156.0003 156.0003 l
(S) *
827.9994 143.9998 m
-156.0006 143.9998 l
(S) *
827.9996 132.0001 m
-156.0003 132.0001 l
(S) *
827.9994 120.0001 m
-156.0006 120.0001 l
(S) *
827.9996 108.0003 m
-156.0003 108.0003 l
(S) *
827.9994 95.9998 m
-156.0006 95.9998 l
(S) *
827.9996 84.0001 m
-156.0003 84.0001 l
(S) *
827.9994 72.0001 m
-156.0006 72.0001 l
(S) *
827.9996 60.0003 m
-156.0003 60.0003 l
(S) *
827.9994 47.9998 m
-156.0006 47.9998 l
(S) *
827.9996 36.0001 m
-156.0003 36.0001 l
(S) *
827.9994 24.0001 m
-156.0006 24.0001 l
(S) *
827.9996 12.0003 m
-156.0003 12.0003 l
(S) *
827.9994 -0.0002 m
-156.0006 -0.0002 l
(S) *
827.9996 -11.9999 m
-156.0003 -11.9999 l
(S) *
827.9994 -23.9999 m
-156.0006 -23.9999 l
(S) *
827.9996 -35.9997 m
-156.0003 -35.9997 l
(S) *
827.9994 -48.0002 m
-156.0006 -48.0002 l
(S) *
827.9996 -59.9999 m
-156.0003 -59.9999 l
(S) *
827.9994 -71.9999 m
-156.0006 -71.9999 l
(S) *
827.9996 -83.9997 m
-156.0003 -83.9997 l
(S) *
827.9994 -96.0002 m
-156.0006 -96.0002 l
(S) *
827.9996 -107.9999 m
-156.0003 -107.9999 l
(S) *
UU0 0 0 1 K
1 w71.9999 648.0001 m
155.9999 648.0001 l
S71.9999 623.9791 m
155.9999 623.9791 l
S71.9999 599.9584 m
155.9999 599.9584 l
S71.9999 575.9165 m
155.9999 575.9165 l
S71.9999 551.9583 m
155.9999 551.9583 l
S1 Ap
0 O
0 0 0 1 k
87.2917 656.0001 m
89.5008 656.0001 91.2917 657.791 91.2917 660.0001 c
91.2917 662.2092 89.5008 664.0001 87.2917 664.0001 c
85.0826 664.0001 83.2917 662.2092 83.2917 660.0001 c
83.2917 657.791 85.0826 656.0001 87.2917 656.0001 c
f87.2917 631.3333 m
89.5008 631.3333 91.2917 633.1242 91.2917 635.3333 c
91.2917 637.5424 89.5008 639.3333 87.2917 639.3333 c
85.0826 639.3333 83.2917 637.5424 83.2917 635.3333 c
83.2917 633.1242 85.0826 631.3333 87.2917 631.3333 c
f87.2917 583.5417 m
89.5008 583.5417 91.2917 585.3326 91.2917 587.5417 c
91.2917 589.7508 89.5008 591.5417 87.2917 591.5417 c
85.0826 591.5417 83.2917 589.7508 83.2917 587.5417 c
83.2917 585.3326 85.0826 583.5417 87.2917 583.5417 c
f0 To
1 0 0 1 101.3333 655.3333 0 Tp
0 Tv
TP
0 Tr
%_ 0 50 XQ
/_Helvetica 14 13.034 -3.1499 Tf
0 Ts
100 100 Tz
20 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 XbXB0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.2801 Tc
0 Tw
(f1\(x1\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 102 632 0 Tp
0 Tv
TP
0 Tr
(f2\(x2\)) Tx 1 0 Tk
(\r) TX 
TO
375.9579 643.5209 m
378.167 643.5209 379.9579 645.3118 379.9579 647.5209 c
379.9579 649.73 378.167 651.5209 375.9579 651.5209 c
373.7488 651.5209 371.9579 649.73 371.9579 647.5209 c
371.9579 645.3118 373.7488 643.5209 375.9579 643.5209 c
f0 To
1 0 0 1 390.6663 644.1876 0 Tp
0 Tv
TP
0 Tr
(f3\(x3\)) Tx 1 0 Tk
(\r) TX 
TO
272.9575 431.9168 m
275.1666 431.9168 276.9575 433.7077 276.9575 435.9168 c
276.9575 438.1259 275.1666 439.9168 272.9575 439.9168 c
270.7484 439.9168 268.9575 438.1259 268.9575 435.9168 c
268.9575 433.7077 270.7484 431.9168 272.9575 431.9168 c
f0 To
1 0 0 1 287.6659 432.5834 0 Tp
0 Tv
TP
0 Tr
(f3\(x3\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 102 584 0 Tp
0 Tv
TP
0 Tr
(f4\(x4\)) Tx 1 0 Tk
(\r) TX 
TO
0 Ap
0 R
0 0 0 1 K
359.9999 684.0004 m
443.9999 684.0004 l
S359.9999 659.9794 m
443.9999 659.9794 l
S359.9999 635.9587 m
443.9999 635.9587 l
S359.9999 611.9168 m
443.9999 611.9168 l
S359.9999 587.9586 m
443.9999 587.9586 l
S1 Ap
0 O
0 0 0 1 k
375.2917 692.0004 m
377.5008 692.0004 379.2917 693.7913 379.2917 696.0004 c
379.2917 698.2095 377.5008 700.0004 375.2917 700.0004 c
373.0826 700.0004 371.2917 698.2095 371.2917 696.0004 c
371.2917 693.7913 373.0826 692.0004 375.2917 692.0004 c
f375.2917 667.3336 m
377.5008 667.3336 379.2917 669.1245 379.2917 671.3336 c
379.2917 673.5427 377.5008 675.3336 375.2917 675.3336 c
373.0826 675.3336 371.2917 673.5427 371.2917 671.3336 c
371.2917 669.1245 373.0826 667.3336 375.2917 667.3336 c
f375.2917 619.542 m
377.5008 619.542 379.2917 621.3329 379.2917 623.542 c
379.2917 625.7511 377.5008 627.542 375.2917 627.542 c
373.0826 627.542 371.2917 625.7511 371.2917 623.542 c
371.2917 621.3329 373.0826 619.542 375.2917 619.542 c
f0 To
1 0 0 1 389.3334 691.3336 0 Tp
0 Tv
TP
0 Tr
(f1\(x1\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 390 668.0003 0 Tp
0 Tv
TP
0 Tr
(f2\(x2\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 390 620.0003 0 Tp
0 Tv
TP
0 Tr
(f4\(x4\)) Tx 1 0 Tk
(\r) TX 
TO
0 Ap
0 R
0 0 0 1 K
257.6666 472.6463 m
341.6666 472.6463 l
S257.6666 448.6252 m
341.6666 448.6252 l
S257.6666 424.6045 m
341.6666 424.6045 l
S257.6666 400.5626 m
341.6666 400.5626 l
S257.6666 376.6044 m
341.6666 376.6044 l
S1 Ap
0 O
0 0 0 1 k
272.9584 480.6463 m
275.1675 480.6463 276.9584 482.4371 276.9584 484.6463 c
276.9584 486.8554 275.1675 488.6463 272.9584 488.6463 c
270.7492 488.6463 268.9584 486.8554 268.9584 484.6463 c
268.9584 482.4371 270.7492 480.6463 272.9584 480.6463 c
f272.9584 455.9795 m
275.1675 455.9795 276.9584 457.7704 276.9584 459.9795 c
276.9584 462.1886 275.1675 463.9795 272.9584 463.9795 c
270.7492 463.9795 268.9584 462.1886 268.9584 459.9795 c
268.9584 457.7704 270.7492 455.9795 272.9584 455.9795 c
f272.9584 408.1878 m
275.1675 408.1878 276.9584 409.9787 276.9584 412.1878 c
276.9584 414.3969 275.1675 416.1878 272.9584 416.1878 c
270.7492 416.1878 268.9584 414.3969 268.9584 412.1878 c
268.9584 409.9787 270.7492 408.1878 272.9584 408.1878 c
f0 To
1 0 0 1 287 479.9795 0 Tp
0 Tv
TP
0 Tr
(f1\(x1\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 287.6667 456.6461 0 Tp
0 Tv
TP
0 Tr
(f2\(x2\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 287.6667 408.6461 0 Tp
0 Tv
TP
0 Tr
(f4\(x4\)) Tx 1 0 Tk
(\r) TX 
TO
179.9996 630.0003 m
183.3133 630.0003 185.9996 632.6866 185.9996 636.0003 c
185.9996 639.314 183.3133 642.0003 179.9996 642.0003 c
176.6859 642.0003 173.9996 639.314 173.9996 636.0003 c
173.9996 632.6866 176.6859 630.0003 179.9996 630.0003 c
f299.9999 510.0001 m
303.3135 510.0001 305.9999 512.6864 305.9999 516.0001 c
305.9999 519.3138 303.3135 522.0001 299.9999 522.0001 c
296.6862 522.0001 293.9999 519.3138 293.9999 516.0001 c
293.9999 512.6864 296.6862 510.0001 299.9999 510.0001 c
f336.0001 654.0001 m
339.3138 654.0001 342.0001 656.6864 342.0001 660.0001 c
342.0001 663.3137 339.3138 666.0001 336.0001 666.0001 c
332.6865 666.0001 330.0001 663.3137 330.0001 660.0001 c
330.0001 656.6864 332.6865 654.0001 336.0001 654.0001 c
fuu0 Ap
0 R
0 0 0 1 K
3 w [4 ]0 d227.9996 585.375 m
299.9999 516.0001 l
S[]0 d299.9999 516.0001 m
331.2917 636.0003 l
S0 O
0 0 0 1 k
1 w330.1043 643.6329 m
327.4037 639.2113 325.2549 636.44 322.7053 632.9922 c
337.3486 629.1739 l
337.0543 630.7227 336.285 636.8955 336.0882 642.0726 c
335.8753 647.6138 336.0285 652.5484 336.4375 655.6683 c
335.2709 652.7459 332.9953 648.3648 330.1043 643.6329 c
fU220.7635 588.0775 m
223.296 583.5576 224.66 580.327 226.4174 576.4156 c
236.9176 587.313 l
235.423 587.8148 229.6644 590.1669 225.0543 592.5306 c
220.1187 595.0587 215.8915 597.6088 213.3716 599.4932 c
215.3482 597.0449 218.0536 592.9154 220.7635 588.0775 c
fU0 To
1 0 0 1 215.9999 540.0003 0 Tp
0 Tv
TP
0 Tr
(f3\(x3\)) Tx 1 0 Tk
(\r) TX 
TO
1 Ap
0 0.1 0 0 (Light Magenta) 0 x
0 R
0 0 0 1 K
126.7495 725.25 m
126.7495 689.25 L
42.75 689.25 L
42.75 725.25 L
126.7495 725.25 L
b0 0 0 1 k
58.7499 707.9166 m
59.8545 707.9166 60.7499 708.812 60.7499 709.9166 c
60.7499 711.0211 59.8545 711.9166 58.7499 711.9166 c
57.6454 711.9166 56.7499 711.0211 56.7499 709.9166 c
56.7499 708.812 57.6454 707.9166 58.7499 707.9166 c
f54.7498 737.25 m
55.8544 737.25 56.7498 738.1454 56.7498 739.25 c
56.7498 740.3545 55.8544 741.25 54.7498 741.25 c
53.6452 741.25 52.7498 740.3545 52.7498 739.25 c
52.7498 738.1454 53.6452 737.25 54.7498 737.25 c
f48.7499 750.5832 m
49.8545 750.5832 50.7499 751.4787 50.7499 752.5832 c
50.7499 753.6878 49.8545 754.5832 48.7499 754.5832 c
47.6454 754.5832 46.7499 753.6878 46.7499 752.5832 c
46.7499 751.4787 47.6454 750.5832 48.7499 750.5832 c
f69.4166 751.9166 m
70.5211 751.9166 71.4166 752.812 71.4166 753.9166 c
71.4166 755.0211 70.5211 755.9166 69.4166 755.9166 c
68.312 755.9166 67.4166 755.0211 67.4166 753.9166 c
67.4166 752.812 68.312 751.9166 69.4166 751.9166 c
f72.7499 709.2499 m
73.8545 709.2499 74.7499 710.1453 74.7499 711.2499 c
74.7499 712.3544 73.8545 713.2499 72.7499 713.2499 c
71.6454 713.2499 70.7499 712.3544 70.7499 711.2499 c
70.7499 710.1453 71.6454 709.2499 72.7499 709.2499 c
f88.0832 704.5832 m
89.1878 704.5832 90.0832 705.4787 90.0832 706.5832 c
90.0832 707.6878 89.1878 708.5832 88.0832 708.5832 c
86.9787 708.5832 86.0832 707.6878 86.0832 706.5832 c
86.0832 705.4787 86.9787 704.5832 88.0832 704.5832 c
f66.7498 694.6249 m
67.8544 694.6249 68.7498 695.5203 68.7498 696.6249 c
68.7498 697.7294 67.8544 698.6249 66.7498 698.6249 c
65.6452 698.6249 64.7498 697.7294 64.7498 696.6249 c
64.7498 695.5203 65.6452 694.6249 66.7498 694.6249 c
f0 Ap
0 R
0 0 0 1 K
48.4999 753.2499 m
54.7498 739.25 l
58.7499 709.9166 l
67.4999 696.2499 l
72.7499 711.2499 l
S54.7498 739.25 m
69.2499 752.9999 l
S67.4999 696.2499 m
88.0832 706.5832 l
S66.7498 696.6249 m
87.2917 660.0001 l
S1 Ap
0 O
0 0.1 0 0 (Light Magenta) 0 x
347.9994 716.0416 m
347.9994 680.0417 L
263.9999 680.0417 L
263.9999 716.0416 L
347.9994 716.0416 L
b0 0 0 1 k
279.9998 698.7082 m
281.1044 698.7082 281.9998 699.6036 281.9998 700.7082 c
281.9998 701.8127 281.1044 702.7082 279.9998 702.7082 c
278.8952 702.7082 277.9998 701.8127 277.9998 700.7082 c
277.9998 699.6036 278.8952 698.7082 279.9998 698.7082 c
f275.9997 728.0416 m
277.1042 728.0416 277.9997 728.9371 277.9997 730.0416 c
277.9997 731.1462 277.1042 732.0416 275.9997 732.0416 c
274.8951 732.0416 273.9997 731.1462 273.9997 730.0416 c
273.9997 728.9371 274.8951 728.0416 275.9997 728.0416 c
f269.9998 741.3748 m
271.1044 741.3748 271.9998 742.2703 271.9998 743.3748 c
271.9998 744.4794 271.1044 745.3748 269.9998 745.3748 c
268.8952 745.3748 267.9998 744.4794 267.9998 743.3748 c
267.9998 742.2703 268.8952 741.3748 269.9998 741.3748 c
f290.6665 742.7082 m
291.771 742.7082 292.6665 743.6036 292.6665 744.7082 c
292.6665 745.8127 291.771 746.7082 290.6665 746.7082 c
289.5619 746.7082 288.6665 745.8127 288.6665 744.7082 c
288.6665 743.6036 289.5619 742.7082 290.6665 742.7082 c
f293.9998 700.0415 m
295.1044 700.0415 295.9998 700.937 295.9998 702.0415 c
295.9998 703.1461 295.1044 704.0415 293.9998 704.0415 c
292.8952 704.0415 291.9998 703.1461 291.9998 702.0415 c
291.9998 700.937 292.8952 700.0415 293.9998 700.0415 c
f309.3331 695.3748 m
310.4377 695.3748 311.3331 696.2703 311.3331 697.3748 c
311.3331 698.4794 310.4377 699.3748 309.3331 699.3748 c
308.2286 699.3748 307.3331 698.4794 307.3331 697.3748 c
307.3331 696.2703 308.2286 695.3748 309.3331 695.3748 c
f287.9997 685.4165 m
289.1042 685.4165 289.9997 686.312 289.9997 687.4165 c
289.9997 688.5211 289.1042 689.4165 287.9997 689.4165 c
286.8951 689.4165 285.9997 688.5211 285.9997 687.4165 c
285.9997 686.312 286.8951 685.4165 287.9997 685.4165 c
f0 Ap
0 R
0 0 0 1 K
269.7498 744.0415 m
275.9997 730.0416 l
279.9998 700.7082 l
288.7498 687.0415 l
293.9998 702.0415 l
S275.9997 730.0416 m
290.4998 743.7915 l
S288.7498 687.0415 m
309.3331 697.3749 l
S287.9997 687.4165 m
359.9999 689.375 377.2917 623.9998 v
S1 Ap
0 O
0 0.1 0 0 (Light Magenta) 0 x
463.9995 507.3337 m
463.9995 471.3338 L
380 471.3338 L
380 507.3337 L
463.9995 507.3337 L
b0 0 0 1 k
395.9999 490.0003 m
397.1044 490.0003 397.9999 490.8957 397.9999 492.0003 c
397.9999 493.1048 397.1044 494.0003 395.9999 494.0003 c
394.8953 494.0003 393.9999 493.1048 393.9999 492.0003 c
393.9999 490.8957 394.8953 490.0003 395.9999 490.0003 c
f391.9998 519.3337 m
393.1043 519.3337 393.9998 520.2292 393.9998 521.3337 c
393.9998 522.4383 393.1043 523.3337 391.9998 523.3337 c
390.8952 523.3337 389.9998 522.4383 389.9998 521.3337 c
389.9998 520.2292 390.8952 519.3337 391.9998 519.3337 c
f385.9999 532.6669 m
387.1044 532.6669 387.9999 533.5624 387.9999 534.6669 c
387.9999 535.7715 387.1044 536.6669 385.9999 536.6669 c
384.8953 536.6669 383.9999 535.7715 383.9999 534.6669 c
383.9999 533.5624 384.8953 532.6669 385.9999 532.6669 c
f406.6666 534.0003 m
407.7711 534.0003 408.6666 534.8957 408.6666 536.0003 c
408.6666 537.1048 407.7711 538.0003 406.6666 538.0003 c
405.562 538.0003 404.6666 537.1048 404.6666 536.0003 c
404.6666 534.8957 405.562 534.0003 406.6666 534.0003 c
f409.9999 491.3336 m
411.1044 491.3336 411.9999 492.2291 411.9999 493.3336 c
411.9999 494.4382 411.1044 495.3336 409.9999 495.3336 c
408.8953 495.3336 407.9999 494.4382 407.9999 493.3336 c
407.9999 492.2291 408.8953 491.3336 409.9999 491.3336 c
f425.3332 486.6669 m
426.4378 486.6669 427.3332 487.5624 427.3332 488.6669 c
427.3332 489.7715 426.4378 490.6669 425.3332 490.6669 c
424.2287 490.6669 423.3332 489.7715 423.3332 488.6669 c
423.3332 487.5624 424.2287 486.6669 425.3332 486.6669 c
f403.9998 476.7086 m
405.1043 476.7086 405.9998 477.6041 405.9998 478.7086 c
405.9998 479.8132 405.1043 480.7086 403.9998 480.7086 c
402.8952 480.7086 401.9998 479.8132 401.9998 478.7086 c
401.9998 477.6041 402.8952 476.7086 403.9998 476.7086 c
f0 Ap
0 R
0 0 0 1 K
385.7499 535.3336 m
391.9998 521.3337 l
395.9999 492.0003 l
404.7499 478.3336 l
409.9999 493.3336 l
S391.9998 521.3337 m
406.4999 535.0836 l
S404.7499 478.3336 m
425.3332 488.667 l
S1 Ap
17.75 663.5355 m
19.8979 663.5355 21.6391 661.9526 21.6391 660.0001 c
21.6391 658.0476 19.8979 656.4647 17.75 656.4647 c
15.6021 656.4647 13.8609 658.0476 13.8609 660.0001 c
13.8609 661.9526 15.6021 663.5355 17.75 663.5355 c
s0 Ap
21.6391 660.0001 m
48.0001 660.0001 l
48.0001 655 l
49 655 l
S44 660.0001 m
44 655 l
43 655 l
Su1 Ap
455.6875 626.6397 m
457.8354 626.6397 459.5766 625.0568 459.5766 623.1043 c
459.5766 621.1518 457.8354 619.5689 455.6875 619.5689 c
453.5396 619.5689 451.7984 621.1518 451.7984 623.1043 c
451.7984 625.0568 453.5396 626.6397 455.6875 626.6397 c
s0 Ap
459.5766 623.1043 m
485.9376 623.1043 l
485.9376 618.1042 l
486.9375 618.1042 l
S481.9375 623.1043 m
481.9375 618.1042 l
480.9375 618.1042 l
SUu1 Ap
215.3542 465.7647 m
217.502 465.7647 219.2433 464.1818 219.2433 462.2293 c
219.2433 460.2768 217.502 458.6939 215.3542 458.6939 c
213.2063 458.6939 211.4651 460.2768 211.4651 462.2293 c
211.4651 464.1818 213.2063 465.7647 215.3542 465.7647 c
s0 Ap
219.2433 462.2293 m
245.6043 462.2293 l
245.6043 457.2292 l
246.6042 457.2292 l
S241.6042 462.2293 m
241.6042 457.2292 l
240.6042 457.2292 l
SUu1 Ap
0 0.21 0 0.76 K
220 417.3333 m
222.1479 417.3333 223.8891 415.7505 223.8891 413.7979 c
223.8891 411.8454 222.1479 410.2626 220 410.2626 c
217.8521 410.2626 216.1109 411.8454 216.1109 413.7979 c
216.1109 415.7505 217.8521 417.3333 220 417.3333 c
s0 Ap
223.8891 413.7979 m
250.2501 413.7979 l
250.2501 408.7978 l
251.25 408.7978 l
S246.25 413.7979 m
246.25 408.7978 l
245.25 408.7978 l
SUu1 Ap
455.9999 699.1124 m
458.1477 699.1124 459.889 697.5296 459.889 695.577 c
459.889 693.6245 458.1477 692.0417 455.9999 692.0417 c
453.852 692.0417 452.1108 693.6245 452.1108 695.577 c
452.1108 697.5296 453.852 699.1124 455.9999 699.1124 c
s0 Ap
459.889 695.577 m
486.25 695.577 l
486.25 690.5769 l
487.2499 690.5769 l
S482.2499 695.577 m
482.2499 690.5769 l
481.2499 690.5769 l
SUu1 Ap
216 489.7647 m
218.1478 489.7647 219.8891 488.1818 219.8891 486.2293 c
219.8891 484.2768 218.1478 482.6939 216 482.6939 c
213.8521 482.6939 212.1109 484.2768 212.1109 486.2293 c
212.1109 488.1818 213.8521 489.7647 216 489.7647 c
s0 Ap
219.8891 486.2293 m
246.2501 486.2293 l
246.2501 481.2292 l
247.25 481.2292 l
S242.25 486.2293 m
242.25 481.2292 l
241.25 481.2292 l
SU0 0 0 1 K
403.9998 478.7086 m
332 461.3333 l
Su425.3332 486.6669 m
454.6665 531.9589 425.3332 486.6669 v
395.9999 441.375 376 437.3333 352.6667 435.3333 c
S0 O
0 0 0 1 k
350.4008 434.1104 m
352.0907 433.7542 353.2007 433.3877 354.5678 432.9705 c
354.137 437.9964 l
353.6832 437.7315 351.8294 436.8025 350.2248 436.1642 c
348.5075 435.4803 346.9401 434.979 345.9143 434.7601 c
346.9624 434.719 348.5922 434.4919 350.4008 434.1104 c
fULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
