%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (Jason Hickey) (Cornell University)
%%Title: (and-success.ai)
%%CreationDate: (9/10/98) (8:27 PM)
%%BoundingBox: 158 659 638 776
%%HiResBoundingBox: 158.5 659.0001 637.9996 775.5
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Oblique
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%DocumentCustomColors: (Buff Blue)
%%+ (Dark Purple)
%%+ (Light Blue)
%%+ (Light Green)
%%CMYKCustomColor: 0.1 0 0 0 (Light Blue)
%%+ 0.1 0 0.1 0 (Light Green)
%%+ 0 0.1 0 0 (Light Magenta)
%%RGBCustomColor: 0.1059 0.3059 0.851 (Back blue)
%%+ 0.9608 1 0.3725 (Bright Yellow)
%%+ 0.2078 0.3569 0.651 (Buff Blue)
%%+ 0.9098 0.5922 0 (Burnt Orange)
%%+ 0.3843 0.2941 0.5686 (Dark Purple)
%%+ 0 0.5882 0.4706 (Forest Green)
%%+ 1 0.9608 0.6588 (Light Yellow)
%%+ 0.502 0.3843 0.7412 (Tool Purple)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 8 37 600 781
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI5_OpenToView: 378 816 2 698 716 18 1 1 5 46 0 0
%AI5_OpenViewLayers: 77
%AI5_ViewPalette: 0 2 1.5 4339.6667 4153.6667 0 0 77 Main View
%%PageOrigin:8 37
%%AI3_PaperRect:-8 784 604 -8
%%AI3_Margin:8 -40 -9 8
%AI7_GridSettings: 12 1 12 1 0 0 0.833333 0.833333 0.833333 0.833333 0.833333 0.833333
%AI7_Thumbnail: 128 32 8
%%BeginData: 9458 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45302F302F302F302F302F302F302F302F302F302F302F302F302F30
%2F302F302F302F30FF302F302F302F302F302F302F302F302F302F302F30
%2F302F302F302F302F302F302F302F302F302F302F302F30FF302F302F30
%2F302F302F302F302F302F302F302F302F302F302F302F302FFD04F8302F
%302F302F302F302F302F29FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECF
%A8FFAECFA8FFAECFA8FFAECFA8FF29FF29FFAECFA8FFAECFA8FFAECFA8FF
%AECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECF
%29FF29CFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFFD04
%F8A8FFAFFFFD04F8A8FFAECFA8FFAE2F30AEFFAEA8AEA8AEA87DA8AEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE30FF30AEA8AEA8AEA883
%A883FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAE30FF30AEFF83A883A87DA8AEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEF8F8FFAFFFAFFFAFFFAFFFAFFFAFF8F8FFAEFFAEFF2F29CFA8FF52A8
%52A87DCF52FFA8CFA8FFA8CF28FFA8CFA8FF4C4DA8FFA8CFA8FFA8CF29FF
%29CF52FF7DA752A8A8A7A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FF29FF29FFA8A7A8A8527D7DFFA8CFA8FF
%A8CFA8FFA8CFA8FFA8F828FFA9FFA8FFA94DA8FFA9FFA8FFA9FFF8F8A8CF
%A82F30AEFF7DA87DA8837D7DFFAEFFAEFFAEFF4D534DFFAEFF4D534D53AE
%FFAE534D53AE30FF307DA883A87DFF58A883FFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE30FF30AEFF7DA883
%A87DFFAEFFAEFFAEFFAEFFAEFFAEFFAEF84D534DFFAFFFAF534D53AFFFAF
%534D53AFFFAFF8AEFF2F29CFA8FFAECFA8FFAECFA8FFAECFA8FFAE534C53
%AECFA8FF4D53A8FFAECF4C534DCF29FF29CFA8FFAECFA8FFAECFA8FFAECF
%A8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FF
%29FF29FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8F8AF534C53AFFF
%A8FF4D534CFFAFFF4C534DFFA8FFF8CFA82F30AEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAE534DFFAEFFAE53AEFFAEFFAEFF4DFFAE30FF30AEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFF8FFAF534DFFAFFFAF53AFFFAFFFAFFF4DFFAFFFAFFFF8FF2F29FFA8A7
%52FFA8CFA8FFA8CFA8FFA8CFA8FFA84DA8FFA84DA8FFA8CFA8FFA84DA8FF
%29FF29FF7DA77DFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF29FF29CFA8A87DCFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFF8FFA8FFA94DA8FFA9FF28FFA9FFA8FFA94DA8FFA9FF
%A8F8A82F30AEFF7DFFAEA87DA883A8837D58A87DA883FF4DFFAEFF4DFFAE
%FFAEFFAEFF4DFFAE30FF30AEA883A883A883A8837D58A883A87DFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE30FF30AEFF7D
%A8AEA883A883A8837D58A87DA8AEFFAEF8AFFFAFFFAF53AFFF4DFFAFFFAF
%FFAFFF4DFFAFFFAFFFF8FF2F29FFAE7D52FF587D52FF58A852FF587D52A8
%AECF4CFFAE53A8FFAECFA8FFAE53A8FF29FF29FF587D52A858A852FF58A8
%52A8587DA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FF
%AECF29FF29CFA87D58CF52A858A852FF58A852A858CFA8FFF8FFA8FFAFFF
%4CFFAF53A8FFAFFFA8FFAF53A8FFAFFFA8F8AE2F30AEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAE53AE53AEFFAEFFAEFFAEFF4DFFAE30FF30AEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEF8AFFFAFFFAF53AFFF4DFFAFFFAFFFAFFF4DFFAFFFAFFFF8FF2F29CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF4CCF28FFA8CFA8FFA8CFA853
%A8CF29FF29CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF
%A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF29FF29FFA8CFA8FFA8CFA8FF
%A8CFA8FFA8CFA8FFA8CFF8FFA9FFA8FFA94DA853A9FFA8FFA9FFA853A9FF
%A8FFA9F8A82F30AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF4D53AE
%FFAEFFAEFFAEFF4DFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE30FF30AE
%FFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFF8FFAFFFAFFF4D53AFFFAF
%FFAFFFAFFF4DFFAFFFAFF8AEFF2F29CFA8FFAECFA8FFAECFA8FF4DCFA8FF
%AECFA8FFAE534CFFAECFA8FFAECF4C53AECF29FF29CF7DA883CFA8FFAECF
%A8FFAECFA8FFAE53A8FFAECFA8FFAECFA853AECF7DFFAECFA8FF4D53A8FF
%AECFA8FF29FF29FFAEA77DFFAECFA8FFAECFA8FFAECFA8FF4DCFA8F8AFFF
%A8FFAF534CFFAFFFA8FFAFFFA8534DFFA8FFF8CFA82F30AEFFAEFFAEFFAE
%FFAEFF4DFF4DFF52A8AEFFAE534D53AEFFAEFFAEFFAE534D53AE30FF30AE
%A883A883A883A8837D52A883A87D53AF53AEFF58A8AEFFAE534D53AE7D7D
%FFAEFF4D534D53AEA883FFAE30FF30AEFF7DA87DA87DA858A8587D58A87D
%A84DFF4DFF52F8AFFFAFFF4D534DFFAFFFAFFFAF534D53AFFFF8FFAEFF2F
%29FFA8CFA8FFA8CFA8FF4C4D2853A87C52FFA8CF28534CCFA8FFA8CFA8FF
%4C4D28FF29FF29FF527D527D52A852FF52A8527D527D28534CCFA87D52CF
%A8FF4C4D28FF52A7A8FFA84D2853A8CF52A8A8CF29FF29CFA87D527C527D
%7D7CFD047D527D524D2853A87C52F8F8FFA8534CFFA8FFA9FFA8FF4C4D28
%F8F8CFA8FFA82F30AEFFAEFFAEFFAEFFAEFF4D53AEFFAEFFAEFFAEFF4DFF
%AEFFAEFFAEFF4DFFAEFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF
%4D53AEFFAEFFAEFFAEFF4DFFAEFFAEFF4D53AEFFAEFFAEFFAEFFAE30FF30
%AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE534DFFAEFFAEFFF8F84DFFAFFF
%AFFFAFFF4D53F8F8AEFFAEFFAEFF2F29FFAECFA8FFAECFA8FFAECFA853AE
%CFA8FFAECFA853AECFA8FFAECF4CFFAECFA8FF29FF29FFAECFA8FFAECFA8
%FFF8CFA8FFAECFA8FFAE53A8FFAECFA8FF4DCFA8FFAECF4CFFAECFA8FFAE
%CFA8FFAECF29FF29CFA8FFAECFA8FFAECFA8F8F8CFA8FFAECFA853AECFA8
%FFAECFA853FD06F84CF8F8CFA8FFAECFA8FFAE2F30AEFFAEFFAEFFAEFFAE
%FFAEFFAE53AEFFAEFFAE53AEFFAEFFAE534DFFAEFFAEFFAE30FF30AEFFAE
%FFAEFFAEFFAEF8AEFFAEFFAEFFAEFF4DFFAEFFAEFFAE53AEFFAEFF4DFFAE
%FFAEFFAEFFAEFFAEFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEF8AEFFAEFFAE
%FFAE53AEFFAEFFAEFF4DFFAEFFAEFF4DFFAEFFAEFFAEFFAEFFAEA82F29CF
%A8FFA8CFA8FFA8CFA8FFA8CF28FFA8CFA8FF4CCFA8FFA84DA8FFA8CFA8FF
%A8CF29FF29CFA8FFA8CFA8FFA8CFA8F8A8CFA8FFA8CFA8FF4CCFA8FFA8CF
%28FFA8CF28FFA8CFA8FFA8CFA8FFA8CFA8FF29FF29FFA8CFA8FFA8CFA8FF
%A8CFF8FFA8CFA8FFA8CFA853A8CFA8FF4CCFA8FFA84D28FF52A7527D527D
%52A8527C522F30AEFFAEFFAEFFAEFFAEFFAEFFAEFF4DFD06F8FFAE53AEFF
%AEFFAEFFAEFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEF8F8FFAEFFAEFFAEFF
%4DFD05F8AE534DFFAEFFAEFFAEFFAEFFAEFFAEFFAE30FF30AEFFAEFFAEFF
%AEFFAEFFAEFFF8F8AEFFAEFFAEFF4DFFAEFFAE53AEFFAE53AEFFAE7D837D
%7DA87D7D837D83A82F29CFA8FFAECFA8FFAECFA8FFAECFA8FFF8CFA853AE
%CFF853AECFA8FFAECFA8FFAECF29FF29CFA8FFAECFA8FFAECFA8FFF8F8A8
%FFAECFA8FFAEF8A8FFAE53A8F8AECFA8FFAECFA8FFAECFA8FFAECFA8FF29
%FF29FFAECFA8FFAECFA8FFAECFA8F8F8CFA8FFAECFA8FF4DCFA8FF4DCFA8
%53AECFA8FFAECFA8FFAECFA8FFAECFA82F30AEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAE53AEFF4DFF4DFFAEFFAEFFAEFFAEFFAEFFAE30FF30AEFFAEFFAEFF
%AEA883FFAEFFF8FFAEFFAEFFAEFFAE53AEFF4D53AEFF7DA858A8587D587D
%83A87D7D837D5830FF30AEFFAEFFAEFFAEFF83A8AEFFAEF8F8FFAEFFAEFF
%AEFF4DFF4DFF4D53AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF2F29FFA8CFA8
%FFA8CFA8FFA8CFA8FFA8CFA8534C4D28FFA8CFA8FFA8CFA8FFA8CFA8FF29
%FF29FFA8CFA8FFA8CF52A87DA752A852A7527D52A752A8A84D2853A8CFA8
%7D7D7D52A87DA752A852A752A852A729FF29CFA8FFA8CFA8FFA87D7DA87D
%CF527D7D7C527D7D7D52534C4D28FF527DA8FFA8CFA8FFA8CFA8FFA8CFA8
%FFA82F30AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF4D534DFFAEFFAEFFAEFF
%AEFFAEFFAEFFAE30FF30AEFFAEFFAEFFAEFD057D837D837D83A87DA87DFF
%4D534DFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE30FF30AEFFAEFFAEFF
%AEFF58A858A8AE7D58FF58FF7DA87DA84D534DFFAE7D7DFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFF2F29FFAECFA8FFAECFA8FFAECFA8FFAECFA8FF4D53A8
%FFAECFA8FFAECFA8FFAECFA8FF29FF29FFAECFA8FFAECFA8FFAECFA8FFAE
%CFA8FFAECFA8FFAE534CFFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECF29
%FF29CFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FF4D53A8FFAE
%CFA8FFAECFA8FFAECFA8FFAECFA8FFAE2F30AEFFAEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAE53AEFFAEFFAEFFAEFFAEFFAEFFAEFFAE30FF30AEFFAEFFAEFF
%AEFFAEFFAEFFF8FFAEFFAEFFAEFFAEFFAE53AEFFAEFF58FFAEFFAEA8AEFF
%AEFF7DFFAEFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEFFAEF8AEFFAEFFAEFF
%AEFFAE53AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFF2F29CFA8FFA8
%CFA8FFA8CFA8FFA8CFA8FFA8CF28FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF29
%FF29CFA8FFA8CFA8FFA8CFA8FFA8F8F8FFA8CFA8FFA8CFA8FF4CCFA8FFA8
%A7527D7DCF52A87DCF527DA8CFA8FF29FF29FFA8CFA8FFA8CFA8FFA8CFA8
%FFF8F8A8FFA8CFA8FFA8CF28FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8
%CFA82F30AEFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE53AEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAE30FF30AEFFAEFFAEFFAEFFAEFFAEFFF8F8AEFFAEFFAEFF
%AEFFAE53AEFFAEFF7D7D7DFFAE7D83FFAEA858FFAEFFAE30FF30AEFFAEFF
%AEFFAEFFAEFFAEFFAEF8F8FFAEFFAEFFAEFFAE53AEFFAEFFAEFFAEFFAEFF
%AEFFAEFFAEFFAEFFAEFF2F29CFA8FFAECFA8FFAECFA8FFAECFA8FFAECF4C
%FFAECFA8FFAECFA8FFAECFA8FFAECF29FF29CFA8FFAECFA8FFAECFA8FFAE
%F8F8FFAECFA8FFAECFA8FF4DCFA8FFAE7DA8FF83CFA8FF83CFA8A8AECFA8
%FF29FF29FFAECFA8FFAECFA8FFAECFA8FFF8F8A8FFAECFA8FFAECF4CFFAE
%CFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA82F302F302F302F302F302F30
%2F302F302F302F532F302F302F302F302F302F302F302F30FF302F302F30
%2F302F302F302F30F8302F302F302F302F302F532F302F302F302F302F30
%2F302F302F302F302F30FF302F302F302F302F302F302F302FF82F302F30
%2F302F302F532F302F302F302F302F302F302F302F302F302F302FFD7FFF
%FF
%%EndData%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			dup length 1 sub
			1 exch
			getinterval
			
			cvn
			findfont
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
					findfont
					[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Oblique
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot 174/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ%AI3_EndEncoding AdobeType%AI5_BeginPalette
0 0 Pb
0.1 0 0 0 (Light Blue) 0 x
(Light Blue) Pc
0.1 0 0.1 0 (Light Green) 0 x
(Light Green) Pc
0 0.1 0 0 (Light Magenta) 0 x
(Light Magenta) Pc
0.9608 1 0.3725 (Bright Yellow) 0 1 Xx
(Bright Yellow\012  1) Pc
0 0.5882 0.4706 (Forest Green) 0 1 Xx
(Forest Green) Pc
0.2078 0.3569 0.651 (Buff Blue) 0 1 Xx
(Buff Blue) Pc
1 0.9608 0.6588 (Light Yellow) 0 1 Xx
(Light Yellow\012  1) Pc
0.9098 0.5922 0 (Burnt Orange) 0 1 Xx
(Burnt Orange\012  1) Pc
0.1059 0.3059 0.851 (Back blue) 0 1 Xx
(Back blue\012  1) Pc
0.502 0.3843 0.7412 (Tool Purple) 0 1 Xx
(Tool Purple\012  1) Pc
0.3843 0.2941 0.5686 (Dark Purple) 0 1 Xx
(Dark Purple) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 255 79 79 Lb
(Background 2) Ln
0 A
1 Ap
0 O
0.1 0 0.1 0 (Light Green) 0 x
0 R
0.2078 0.3569 0.651 (Buff Blue) 0 1 XX
800 Ar
0 J 0 j 2 w 4 M []0 d%AI3_Note:0 D
0 XR
286.0001 660.0001 m
287.105 660.0001 288.0001 660.8955 288.0001 661.9997 C
288.0001 772.5004 L
288.0001 773.6046 287.105 774.5 286.0001 774.5 C
161.5 774.5 L
160.3951 774.5 159.5 773.6046 159.5 772.5004 C
159.5 661.9997 L
159.5 660.8955 160.3951 660.0001 161.5 660.0001 C
286.0001 660.0001 L
b458.0006 660.0001 m
459.1044 660.0001 460 660.8955 460 661.9997 C
460 772.5004 L
460 773.6046 459.1044 774.5 458.0006 774.5 C
295.4994 774.5 L
294.3955 774.5 293.5 773.6046 293.5 772.5004 C
293.5 661.9997 L
293.5 660.8955 294.3955 660.0001 295.4994 660.0001 C
458.0006 660.0001 L
b469.9994 774.5 m
468.8944 774.5 467.9996 773.6046 467.9996 772.5004 C
467.9996 661.9997 L
467.9996 660.8955 468.8944 660.0001 469.9994 660.0001 C
634.9998 660.0001 L
636.1048 660.0001 636.9996 660.8955 636.9996 661.9997 C
636.9996 772.5004 L
636.9996 773.6046 636.1048 774.5 634.9998 774.5 C
469.9994 774.5 L
bLB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Background) Ln
0 A
0 O
0.1 0 0 0 (Light Blue) 0 x
0 R
0 0 0 1 K
800 Ar
0 J 0 j 1 w 4 M [2 ]0 d%AI3_Note:0 D
0 XR
585.9991 772.1128 m
609.8206 772.1128 629.1325 758.1829 629.1325 741 c
629.1325 723.8171 609.8206 709.8871 585.9991 709.8871 c
562.1775 709.8871 542.8657 723.8171 542.8657 741 c
542.8657 758.1829 562.1775 772.1128 585.9991 772.1128 c
buu0 Ap
0 0 0 XA
0 w []0 d-156.0003 876.0001 m
-156.0003 -107.9999 l
(S) *
-143.9999 875.9998 m
-143.9999 -108.0002 l
(S) *
-132.0001 876.0001 m
-132.0001 -107.9999 l
(S) *
-120.0001 875.9998 m
-120.0001 -108.0002 l
(S) *
-108.0003 876.0001 m
-108.0003 -107.9999 l
(S) *
-95.9999 875.9998 m
-95.9999 -108.0002 l
(S) *
-84.0001 876.0001 m
-84.0001 -107.9999 l
(S) *
-72.0001 875.9998 m
-72.0001 -108.0002 l
(S) *
-60.0003 876.0001 m
-60.0003 -107.9999 l
(S) *
-47.9999 875.9998 m
-47.9999 -108.0002 l
(S) *
-36.0001 876.0001 m
-36.0001 -107.9999 l
(S) *
-24.0001 875.9998 m
-24.0001 -108.0002 l
(S) *
-12.0003 876.0001 m
-12.0003 -107.9999 l
(S) *
0.0001 875.9998 m
0.0001 -108.0002 l
(S) *
11.9999 876.0001 m
11.9999 -107.9999 l
(S) *
23.9999 875.9998 m
23.9999 -108.0002 l
(S) *
35.9996 876.0001 m
35.9996 -107.9999 l
(S) *
48.0001 875.9998 m
48.0001 -108.0002 l
(S) *
59.9999 876.0001 m
59.9999 -107.9999 l
(S) *
71.9999 875.9998 m
71.9999 -108.0002 l
(S) *
83.9996 876.0001 m
83.9996 -107.9999 l
(S) *
96.0001 875.9998 m
96.0001 -108.0002 l
(S) *
107.9999 876.0001 m
107.9999 -107.9999 l
(S) *
119.9999 875.9998 m
119.9999 -108.0002 l
(S) *
131.9996 876.0001 m
131.9996 -107.9999 l
(S) *
144.0001 875.9998 m
144.0001 -108.0002 l
(S) *
155.9999 876.0001 m
155.9999 -107.9999 l
(S) *
167.9999 875.9998 m
167.9999 -108.0002 l
(S) *
179.9996 876.0001 m
179.9996 -107.9999 l
(S) *
192.0001 875.9998 m
192.0001 -108.0002 l
(S) *
203.9999 876.0001 m
203.9999 -107.9999 l
(S) *
215.9999 875.9998 m
215.9999 -108.0002 l
(S) *
227.9996 876.0001 m
227.9996 -107.9999 l
(S) *
240.0001 875.9998 m
240.0001 -108.0002 l
(S) *
251.9999 876.0001 m
251.9999 -107.9999 l
(S) *
263.9999 875.9998 m
263.9999 -108.0002 l
(S) *
275.9996 876.0001 m
275.9996 -107.9999 l
(S) *
288.0001 875.9998 m
288.0001 -108.0002 l
(S) *
299.9999 876.0001 m
299.9999 -107.9999 l
(S) *
311.9999 875.9998 m
311.9999 -108.0002 l
(S) *
323.9996 876.0001 m
323.9996 -107.9999 l
(S) *
336.0001 875.9998 m
336.0001 -108.0002 l
(S) *
347.9999 876.0001 m
347.9999 -107.9999 l
(S) *
359.9999 875.9998 m
359.9999 -108.0002 l
(S) *
371.9996 876.0001 m
371.9996 -107.9999 l
(S) *
384.0001 875.9998 m
384.0001 -108.0002 l
(S) *
395.9999 876.0001 m
395.9999 -107.9999 l
(S) *
407.9999 875.9998 m
407.9999 -108.0002 l
(S) *
419.9996 876.0001 m
419.9996 -107.9999 l
(S) *
432.0001 875.9998 m
432.0001 -108.0002 l
(S) *
443.9999 876.0001 m
443.9999 -107.9999 l
(S) *
455.9999 875.9998 m
455.9999 -108.0002 l
(S) *
467.9996 876.0001 m
467.9996 -107.9999 l
(S) *
480.0001 875.9998 m
480.0001 -108.0002 l
(S) *
491.9999 876.0001 m
491.9999 -107.9999 l
(S) *
503.9999 875.9998 m
503.9999 -108.0002 l
(S) *
515.9996 876.0001 m
515.9996 -107.9999 l
(S) *
528.0001 875.9998 m
528.0001 -108.0002 l
(S) *
539.9999 876.0001 m
539.9999 -107.9999 l
(S) *
551.9999 875.9998 m
551.9999 -108.0002 l
(S) *
563.9996 876.0001 m
563.9996 -107.9999 l
(S) *
576.0001 875.9998 m
576.0001 -108.0002 l
(S) *
587.9999 876.0001 m
587.9999 -107.9999 l
(S) *
599.9999 875.9998 m
599.9999 -108.0002 l
(S) *
611.9996 876.0001 m
611.9996 -107.9999 l
(S) *
624.0001 875.9998 m
624.0001 -108.0002 l
(S) *
635.9999 876.0001 m
635.9999 -107.9999 l
(S) *
647.9999 875.9998 m
647.9999 -108.0002 l
(S) *
659.9996 876.0001 m
659.9996 -107.9999 l
(S) *
672.0001 875.9998 m
672.0001 -108.0002 l
(S) *
683.9999 876.0001 m
683.9999 -107.9999 l
(S) *
695.9999 875.9998 m
695.9999 -108.0002 l
(S) *
707.9996 876.0001 m
707.9996 -107.9999 l
(S) *
720.0001 875.9998 m
720.0001 -108.0002 l
(S) *
731.9999 876.0001 m
731.9999 -107.9999 l
(S) *
743.9999 875.9998 m
743.9999 -108.0002 l
(S) *
755.9996 876.0001 m
755.9996 -107.9999 l
(S) *
768.0001 875.9998 m
768.0001 -108.0002 l
(S) *
779.9999 876.0001 m
779.9999 -107.9999 l
(S) *
791.9999 875.9998 m
791.9999 -108.0002 l
(S) *
803.9996 876.0001 m
803.9996 -107.9999 l
(S) *
816.0001 875.9998 m
816.0001 -108.0002 l
(S) *
827.9999 876.0001 m
827.9999 -107.9999 l
(S) *
Uu827.9996 876.0003 m
-156.0003 876.0003 l
(S) *
827.9994 863.9998 m
-156.0006 863.9998 l
(S) *
827.9996 852.0001 m
-156.0003 852.0001 l
(S) *
827.9994 840.0001 m
-156.0006 840.0001 l
(S) *
827.9996 828.0003 m
-156.0003 828.0003 l
(S) *
827.9994 815.9998 m
-156.0006 815.9998 l
(S) *
827.9996 804.0001 m
-156.0003 804.0001 l
(S) *
827.9994 792.0001 m
-156.0006 792.0001 l
(S) *
827.9996 780.0003 m
-156.0003 780.0003 l
(S) *
827.9994 767.9998 m
-156.0006 767.9998 l
(S) *
827.9996 756.0001 m
-156.0003 756.0001 l
(S) *
827.9994 744.0001 m
-156.0006 744.0001 l
(S) *
827.9996 732.0003 m
-156.0003 732.0003 l
(S) *
827.9994 719.9998 m
-156.0006 719.9998 l
(S) *
827.9996 708.0001 m
-156.0003 708.0001 l
(S) *
827.9994 696.0001 m
-156.0006 696.0001 l
(S) *
827.9996 684.0003 m
-156.0003 684.0003 l
(S) *
827.9994 671.9998 m
-156.0006 671.9998 l
(S) *
827.9996 660.0001 m
-156.0003 660.0001 l
(S) *
827.9994 648.0001 m
-156.0006 648.0001 l
(S) *
827.9996 636.0003 m
-156.0003 636.0003 l
(S) *
827.9994 623.9998 m
-156.0006 623.9998 l
(S) *
827.9996 612.0001 m
-156.0003 612.0001 l
(S) *
827.9994 600.0001 m
-156.0006 600.0001 l
(S) *
827.9996 588.0003 m
-156.0003 588.0003 l
(S) *
827.9994 575.9998 m
-156.0006 575.9998 l
(S) *
827.9996 564.0001 m
-156.0003 564.0001 l
(S) *
827.9994 552.0001 m
-156.0006 552.0001 l
(S) *
827.9996 540.0003 m
-156.0003 540.0003 l
(S) *
827.9994 527.9998 m
-156.0006 527.9998 l
(S) *
827.9996 516.0001 m
-156.0003 516.0001 l
(S) *
827.9994 504.0001 m
-156.0006 504.0001 l
(S) *
827.9996 492.0003 m
-156.0003 492.0003 l
(S) *
827.9994 479.9998 m
-156.0006 479.9998 l
(S) *
827.9996 468.0001 m
-156.0003 468.0001 l
(S) *
827.9994 456.0001 m
-156.0006 456.0001 l
(S) *
827.9996 444.0003 m
-156.0003 444.0003 l
(S) *
827.9994 431.9998 m
-156.0006 431.9998 l
(S) *
827.9996 420.0001 m
-156.0003 420.0001 l
(S) *
827.9994 408.0001 m
-156.0006 408.0001 l
(S) *
827.9996 396.0003 m
-156.0003 396.0003 l
(S) *
827.9994 383.9998 m
-156.0006 383.9998 l
(S) *
827.9996 372.0001 m
-156.0003 372.0001 l
(S) *
827.9994 360.0001 m
-156.0006 360.0001 l
(S) *
827.9996 348.0003 m
-156.0003 348.0003 l
(S) *
827.9994 335.9998 m
-156.0006 335.9998 l
(S) *
827.9996 324.0001 m
-156.0003 324.0001 l
(S) *
827.9994 312.0001 m
-156.0006 312.0001 l
(S) *
827.9996 300.0003 m
-156.0003 300.0003 l
(S) *
827.9994 287.9998 m
-156.0006 287.9998 l
(S) *
827.9996 276.0001 m
-156.0003 276.0001 l
(S) *
827.9994 264.0001 m
-156.0006 264.0001 l
(S) *
827.9996 252.0003 m
-156.0003 252.0003 l
(S) *
827.9994 239.9998 m
-156.0006 239.9998 l
(S) *
827.9996 228.0001 m
-156.0003 228.0001 l
(S) *
827.9994 216.0001 m
-156.0006 216.0001 l
(S) *
827.9996 204.0003 m
-156.0003 204.0003 l
(S) *
827.9994 191.9998 m
-156.0006 191.9998 l
(S) *
827.9996 180.0001 m
-156.0003 180.0001 l
(S) *
827.9994 168.0001 m
-156.0006 168.0001 l
(S) *
827.9996 156.0003 m
-156.0003 156.0003 l
(S) *
827.9994 143.9998 m
-156.0006 143.9998 l
(S) *
827.9996 132.0001 m
-156.0003 132.0001 l
(S) *
827.9994 120.0001 m
-156.0006 120.0001 l
(S) *
827.9996 108.0003 m
-156.0003 108.0003 l
(S) *
827.9994 95.9998 m
-156.0006 95.9998 l
(S) *
827.9996 84.0001 m
-156.0003 84.0001 l
(S) *
827.9994 72.0001 m
-156.0006 72.0001 l
(S) *
827.9996 60.0003 m
-156.0003 60.0003 l
(S) *
827.9994 47.9998 m
-156.0006 47.9998 l
(S) *
827.9996 36.0001 m
-156.0003 36.0001 l
(S) *
827.9994 24.0001 m
-156.0006 24.0001 l
(S) *
827.9996 12.0003 m
-156.0003 12.0003 l
(S) *
827.9994 -0.0002 m
-156.0006 -0.0002 l
(S) *
827.9996 -11.9999 m
-156.0003 -11.9999 l
(S) *
827.9994 -23.9999 m
-156.0006 -23.9999 l
(S) *
827.9996 -35.9997 m
-156.0003 -35.9997 l
(S) *
827.9994 -48.0002 m
-156.0006 -48.0002 l
(S) *
827.9996 -59.9999 m
-156.0003 -59.9999 l
(S) *
827.9994 -71.9999 m
-156.0006 -71.9999 l
(S) *
827.9996 -83.9997 m
-156.0003 -83.9997 l
(S) *
827.9994 -96.0002 m
-156.0006 -96.0002 l
(S) *
827.9996 -107.9999 m
-156.0003 -107.9999 l
(S) *
UU1 Ap
0 O
0.3843 0.2941 0.5686 (Dark Purple) 0 1 Xx
1 w227.9996 680.0003 m
230.2087 680.0003 231.9996 681.7912 231.9996 684.0003 c
231.9996 686.2094 230.2087 688.0003 227.9996 688.0003 c
225.7905 688.0003 223.9996 686.2094 223.9996 684.0003 c
223.9996 681.7912 225.7905 680.0003 227.9996 680.0003 c
f240.0001 716.0417 m
242.2092 716.0417 244.0001 717.8325 244.0001 720.0417 c
244.0001 722.2508 242.2092 724.0417 240.0001 724.0417 c
237.791 724.0417 236.0001 722.2508 236.0001 720.0417 c
236.0001 717.8325 237.791 716.0417 240.0001 716.0417 c
f275.8751 716.3125 m
278.0842 716.3125 279.8751 718.1034 279.8751 720.3125 c
279.8751 722.5216 278.0842 724.3125 275.8751 724.3125 c
273.666 724.3125 271.8751 722.5216 271.8751 720.3125 c
271.8751 718.1034 273.666 716.3125 275.8751 716.3125 c
f276.0001 752.0417 m
278.2092 752.0417 280.0001 753.8326 280.0001 756.0417 c
280.0001 758.2508 278.2092 760.0417 276.0001 760.0417 c
273.791 760.0417 272.0001 758.2508 272.0001 756.0417 c
272.0001 753.8326 273.791 752.0417 276.0001 752.0417 c
f227.9996 752.7083 m
230.2087 752.7083 231.9996 754.4992 231.9996 756.7083 c
231.9996 758.9174 230.2087 760.7083 227.9996 760.7083 c
225.7905 760.7083 223.9996 758.9174 223.9996 756.7083 c
223.9996 754.4992 225.7905 752.7083 227.9996 752.7083 c
f251.9999 753.375 m
254.209 753.375 255.9999 755.1659 255.9999 757.375 c
255.9999 759.5841 254.209 761.375 251.9999 761.375 c
249.7908 761.375 247.9999 759.5841 247.9999 757.375 c
247.9999 755.1659 249.7908 753.375 251.9999 753.375 c
f0 Ap
0 R
0.3843 0.2941 0.5686 (Dark Purple) 0 1 XX
203.6038 719.1253 m
227.9996 684.0003 l
240.0001 719.9998 l
227.9996 756.0001 l
S240.0001 719.9998 m
251.9999 757.375 l
S276.0001 756.0417 m
275.8751 720.3125 l
227.9996 684.0003 l
S[2 ]0 d227.9996 684.0003 m
227.9996 660.0001 l
S0 0 0 1 K
[]0 d219.6458 696.0001 m
229.0204 702.0417 234.9999 699.9999 241.6667 694 c
S0 To
1 0 0 1 167.9999 756.4377 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
%_ 0 50 XQ
/_Helvetica-Oblique 14 13.034 -3.1499 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 XbXB0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(AND\r) Tx 1 0 Tk
0 -17 Td
(Success) Tx 1 0 Tk
(\r) TX 
TO
1 Ap
0.1 0 0 0 (Light Blue) 0 x
0 R
0.3843 0.2941 0.5686 (Dark Purple) 0 1 XX
203.6038 715.1253 m
205.8129 715.1253 207.6038 716.9162 207.6038 719.1253 c
207.6038 721.3344 205.8129 723.1253 203.6038 723.1253 c
201.3946 723.1253 199.6038 721.3344 199.6038 719.1253 c
199.6038 716.9162 201.3946 715.1253 203.6038 715.1253 c
b0 To
1 0 0 1 211.5 715 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
/_Helvetica 14 13.034 -3.1499 Tf
(a) Tx 1 0 Tk
(\r) TX 
TO
0.3843 0.2941 0.5686 (Dark Purple) 0 1 Xx
558.9992 680.0003 m
561.2083 680.0003 562.9992 681.7912 562.9992 684.0003 c
562.9992 686.2094 561.2083 688.0003 558.9992 688.0003 c
556.7901 688.0003 554.9992 686.2094 554.9992 684.0003 c
554.9992 681.7912 556.7901 680.0003 558.9992 680.0003 c
f570.9997 716.0417 m
573.2088 716.0417 574.9997 717.8325 574.9997 720.0417 c
574.9997 722.2508 573.2088 724.0417 570.9997 724.0417 c
568.7906 724.0417 566.9997 722.2508 566.9997 720.0417 c
566.9997 717.8325 568.7906 716.0417 570.9997 716.0417 c
f606.8747 716.3125 m
609.0838 716.3125 610.8747 718.1034 610.8747 720.3125 c
610.8747 722.5216 609.0838 724.3125 606.8747 724.3125 c
604.6656 724.3125 602.8747 722.5216 602.8747 720.3125 c
602.8747 718.1034 604.6656 716.3125 606.8747 716.3125 c
f606.9997 752.0417 m
609.2088 752.0417 610.9997 753.8326 610.9997 756.0417 c
610.9997 758.2508 609.2088 760.0417 606.9997 760.0417 c
604.7906 760.0417 602.9997 758.2508 602.9997 756.0417 c
602.9997 753.8326 604.7906 752.0417 606.9997 752.0417 c
f558.9992 752.7083 m
561.2083 752.7083 562.9992 754.4992 562.9992 756.7083 c
562.9992 758.9174 561.2083 760.7083 558.9992 760.7083 c
556.7901 760.7083 554.9992 758.9174 554.9992 756.7083 c
554.9992 754.4992 556.7901 752.7083 558.9992 752.7083 c
f582.9995 753.375 m
585.2086 753.375 586.9995 755.1659 586.9995 757.375 c
586.9995 759.5841 585.2086 761.375 582.9995 761.375 c
580.7904 761.375 578.9995 759.5841 578.9995 757.375 c
578.9995 755.1659 580.7904 753.375 582.9995 753.375 c
f0 Ap
0 R
0.3843 0.2941 0.5686 (Dark Purple) 0 1 XX
534.6034 719.1253 m
558.9992 684.0003 l
570.9997 719.9998 l
558.9992 756.0001 l
S570.9997 719.9998 m
582.9995 757.375 l
S606.9997 756.0417 m
606.8747 720.3125 l
558.9992 684.0003 l
S[2 ]0 d558.9992 684.0003 m
558.9992 660.0001 l
S0 To
1 0 0 1 474.999 756.4377 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
[]0 d/_Helvetica-Oblique 14 13.034 -3.1499 Tf
(OR\r) Tx 1 0 Tk
0 -17 Td
(Success) Tx 1 0 Tk
(\r) TX 
TO
1 Ap
0.1 0 0 0 (Light Blue) 0 x
0 R
0.3843 0.2941 0.5686 (Dark Purple) 0 1 XX
534.6034 715.1253 m
536.8125 715.1253 538.6034 716.9162 538.6034 719.1253 c
538.6034 721.3344 536.8125 723.1253 534.6034 723.1253 c
532.3943 723.1253 530.6034 721.3344 530.6034 719.1253 c
530.6034 716.9162 532.3943 715.1253 534.6034 715.1253 c
b0 To
1 0 0 1 542.4996 715 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
/_Helvetica 14 13.034 -3.1499 Tf
(a) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 568.4996 680.5 0 Tp
0 Tv
TP
0 Tr
(a) Tx 1 0 Tk
(\r) TX 
TO
0.3843 0.2941 0.5686 (Dark Purple) 0 1 Xx
384.0001 680.0003 m
386.2092 680.0003 388.0001 681.7912 388.0001 684.0003 c
388.0001 686.2094 386.2092 688.0003 384.0001 688.0003 c
381.791 688.0003 380.0001 686.2094 380.0001 684.0003 c
380.0001 681.7912 381.791 680.0003 384.0001 680.0003 c
f0 Ap
0 R
0.3843 0.2941 0.5686 (Dark Purple) 0 1 XX
359.6043 719.1253 m
384.0001 684.0003 l
396.0006 719.9998 l
S396.0006 719.9998 m
S431.8756 720.3125 m
384.0001 684.0003 l
S[2 ]0 d384.0001 684.0003 m
384.0001 660.0001 l
S0 0 0 1 K
[]0 d375.6463 696.0001 m
385.0209 702.0417 391.0004 699.9999 397.6672 694 c
S0 To
1 0 0 1 297 756.4377 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
/_Helvetica-Oblique 14 13.034 -3.1499 Tf
(AND\r) Tx 1 0 Tk
0 -17 Td
(Success) Tx 1 0 Tk
(\r) TX 
TO
1 Ap
0.1 0 0 0 (Light Blue) 0 x
0 R
0.3843 0.2941 0.5686 (Dark Purple) 0 1 XX
359.6043 715.1253 m
361.8134 715.1253 363.6043 716.9162 363.6043 719.1253 c
363.6043 721.3344 361.8134 723.1253 359.6043 723.1253 c
357.3952 723.1253 355.6043 721.3344 355.6043 719.1253 c
355.6043 716.9162 357.3952 715.1253 359.6043 715.1253 c
b0 To
1 0 0 1 367.5005 715 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
/_Helvetica 14 13.034 -3.1499 Tf
(a) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 403.5629 715 0 Tp
0 Tv
TP
0 Tr
(b) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 440.5 715 0 Tp
0 Tv
TP
0 Tr
(c) Tx 1 0 Tk
(\r) TX 
TO
0.1 0 0 0 (Light Blue) 0 x
0 R
0.3843 0.2941 0.5686 (Dark Purple) 0 1 XX
396.0006 716.0417 m
398.2097 716.0417 400.0006 717.8325 400.0006 720.0417 c
400.0006 722.2508 398.2097 724.0417 396.0006 724.0417 c
393.7915 724.0417 392.0006 722.2508 392.0006 720.0417 c
392.0006 717.8325 393.7915 716.0417 396.0006 716.0417 c
b431.8756 716.3125 m
434.0847 716.3125 435.8756 718.1034 435.8756 720.3125 c
435.8756 722.5216 434.0847 724.3125 431.8756 724.3125 c
429.6665 724.3125 427.8756 722.5216 427.8756 720.3125 c
427.8756 718.1034 429.6665 716.3125 431.8756 716.3125 c
b0 To
1 0 0 1 297 715 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
/_Helvetica-Oblique 14 13.034 -3.1499 Tf
(Success) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 320 680 0 Tp
0 Tv
TP
0 Tr
(Success) Tx 1 0 Tk
(\r) TX 
TO
u0 Ap
0 R
0 0 0 1 K
332 711.5 m
342 696.0001 l
S0 O
0 0 0 1 k
344.1417 694.5709 m
343.6649 696.2308 343.4689 697.3832 343.1971 698.7865 c
338.9584 696.0518 l
339.405 695.7749 341.0941 694.5722 342.4096 693.4535 c
343.8182 692.2565 344.9952 691.1064 345.6691 690.3027 c
345.2145 691.2479 344.6518 692.7943 344.1417 694.5709 c
fU0 To
1 0 0 1 398.0621 685 0 Tp
0 Tv
TP
0 Tr
/_Helvetica 14 13.034 -3.1499 Tf
(compose\r) Tx 1 0 Tk
0 -17 Td
([a;) Tx 1 50 Tk
( b;) Tx 1 50 Tk
( c]) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 0 0 1 K
345 677.5 m
345 669.5 l
S0 O
0 0 0 1 k
346.0249 667.138 m
346.5241 668.7913 346.9841 669.8659 347.5165 671.1924 c
342.4722 671.1924 l
342.6974 670.7176 343.4647 668.7913 343.9636 667.138 c
344.4983 665.3686 344.8639 663.7641 344.9944 662.7234 c
345.1249 663.7641 345.4904 665.3686 346.0249 667.138 c
fU0 To
1 0 0 1 473.4996 715 0 Tp
0 Tv
TP
0 Tr
/_Helvetica-Oblique 14 13.034 -3.1499 Tf
(Success) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 496.4996 680 0 Tp
0 Tv
TP
0 Tr
(Success) Tx 1 0 Tk
(\r) TX 
TO
u0 R
0 0 0 1 K
508.4996 711.5 m
518.4996 696.0001 l
S0 O
0 0 0 1 k
520.6413 694.5709 m
520.1645 696.2308 519.9685 697.3832 519.6967 698.7865 c
515.458 696.0518 l
515.9046 695.7749 517.5937 694.5722 518.9092 693.4535 c
520.3178 692.2565 521.4948 691.1064 522.1687 690.3027 c
521.7142 691.2479 521.1514 692.7943 520.6413 694.5709 c
fUu0 R
0 0 0 1 K
521.4996 677.5 m
521.4996 669.5 l
S0 O
0 0 0 1 k
522.5245 667.138 m
523.0237 668.7913 523.4837 669.8659 524.0161 671.1924 c
518.9718 671.1924 l
519.197 670.7176 519.9643 668.7913 520.4632 667.138 c
520.9979 665.3686 521.3635 663.7641 521.494 662.7234 c
521.6245 663.7641 521.99 665.3686 522.5245 667.138 c
fU0 To
1 0 0 1 630.4991 696.9998 0 Tp
0 Tv
TP
-40.4598 0 Td
0 Tr
2 Ta
(cancel) Tx 1 0 Tk
(\r) TX 
TO
-4014 774.5 m
4626 774.5 L
(N) *
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
