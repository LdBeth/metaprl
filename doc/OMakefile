HTMLDOC = htmldoc
HTMLDOCFLAGS = --no-title --size letter --bodycolor white --toclevel 4
GEN-PS = $`(HTMLDOC) -t ps2 $`(HTMLDOCFLAGS)
GEN-PDF = $`(HTMLDOC) -t pdf $`(HTMLDOCFLAGS)

static. =
   print($'--- Testing for htmldoc... ')
   HTMLDOC_ENABLED = $(Bool $(where htmldoc))
   if $(HTMLDOC_ENABLED)
      println($'(htmldoc found)')
   else
      println($'(FAILED - no htmldoc found)')

WELCOME[] =
    mp
    mp-links
    mp-install
    mp-people
    license

USER-GUIDE[] =
    mp-user-guide
    mp-terms
    mp-dform
    mp-font
    mp-rewrite
    mp-axiom
    mp-modules
    mp-editor

SYSTEM[] =
    mp-system
    mp-refiner
    mp-terms
    mp-rewrite
    mp-refine
    mp-filter
    mp-ensemble
    mp-chaining
    mp-tactic
    mp-tacticals
    mp-conversionals
    mp-ocaml
    mp-base
    mp-base-syntax
    mp-auto-tactic
    mp-d-tactic
    mp-type-inf-rsrc
    mp-base-cache
    mp-editor-imp
    mp-itt

DEVELOPER-GUIDE[] =
    mp-developer-guide
    indentation_and_spacing
    exceptions
    debugging
    refiner_verb_and_simp
    term_modules
    term_ds_types
    term_ds_free_vars
    term_ds_safety
    profiling

if $(HTMLDOC_ENABLED)

   HtmlDoc(name, dir, files) =
      doc: $(name).ps $(name).pdf

      FILES = $(addprefix $(dir)/, $(addsuffix .html, $(files)))

      $(name).ps: $(FILES)
         $(GEN-PS) $(FILES) -f $@

      $(name).pdf: $(FILES)
         $(GEN-PDF) $(FILES) -f $@

   HtmlDoc(introduction, htmlman, $(WELCOME))
   HtmlDoc(user-guide, htmlman/user-guide, $(USER-GUIDE))
   HtmlDoc(system, htmlman/system, $(SYSTEM))
   HtmlDoc(developer-guide, htmlman/developer-guide, $(DEVELOPER-GUIDE))

clean:
   $(CLEAN)

.PHONY: check

check:
   +WEBLINTRC=weblintrc weblint .

.SUBDIRS: latex/theories ps/theories
