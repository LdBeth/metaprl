#
# The version of the MetaPRL program.
#
MP_VERSION = 0.9.6.5+

#
# Versions of Ocaml/Camlp4 that are compatible with MetaPRL
# CAML_VERSIONS shoud be a space-separated list of versions
#
# XXX: TODO: Once 3.08 compatibility is no longer desired, the appropriate TyPrv code
# should be added to filter/base/filter_ocaml.ml
#
CAML_VERSIONS = 4.02.3 4.05.0 4.11.0

if $(SHARED_MODE)
   if $(not $(file-exists $(MP_ROOT)/mk/OCaml_version))
      err[] =
         $"Your MetaPRL installation is incomplete:"
         $"$(MP_ROOT)/mk/OCaml_version) is missing"
      ConfMsgError($(err))
   include $(MP_ROOT)/mk/OCaml_version
   export CAML_VERSIONS

CAMLP5_VERSIONS = 7.12

#
# Theories to compile - default and all
#
THEORIES = itt/core
THEORIES_ALL = meta itt ocaml_sos fol czf sil tptp fir experimental/compile s4lp poplmark/naive cic

#
# The following theories exist but are not (yet?) inclused in THEORIES_ALL:
# - Do not have too many proofs yet: mesa kat
# - Outdated and does not currently compile: lf
# - Lives in a separate CVS repository: mmc
#

#
# Browser commands to try
#
DEFAULT_BROWSER_COMMANDS[] =
   htmlview
   firefox
   mozilla-firefox
   mozilla

#
# Location of OCAML libraries and default compilation flags
#
if $(equal $(OSTYPE), Win32)
   # Compile C files with threads
   CAMLLIB_DEFAULT = $"C:/Program Files/Objective Caml/lib"
   CFLAGS += /MT
   export

else
   CAMLLIB_DEFAULT = /usr/lib/ocaml
   CFLAGS += -O2 -Wall -Wno-unused-variable
   export

static. =
   ConfMsgChecking(for a default location of the OCaml library)
   CAMLLIB_DEFAULT =
      try
         value $(shell ocamlc -where)
      default
         value $(getenv OCAMLLIB, $(CAMLLIB_DEFAULT))

   CAMLLIB_DEFAULT = $(dir $"$(CAMLLIB_DEFAULT)")
   ConfMsgResult($(CAMLLIB_DEFAULT))

OCAMLFLAGS = -warn-error Aez-3-7-29-37-44-45-50 -w Aez-3-7-29-37-44-45-50

#
# Configure
#
open configure/readline
open configure/ncurses

#
# Spelling dictionaries
#
# XXX: TODO: This duplicates a list in filter/base/filter_spell.ml;
# instead the two lists should come from the single source
#
SPELLING_DICTS[] =
   words.linux
   words.metaprl

#
# Defaults for the mk/config variables
#
TERMS = ds
REFINER = VERBOSE
SEQ_SET = Lm_array
ENSROOT = undefined
OCAMLSRC = undefined
SPELLING_ENABLED = true
TESTS_ENABLED = false
COMPILATION_MODE = mixed
SSL_ENABLED = false
THREADS_ENABLED = true
READLINE_ENABLED = $(READLINE_AVAILABLE)
NCURSES_ENABLED = $(NCURSES_AVAILABLE)
SLOPPY_DEPENDENCIES = false
NATIVE_PROFILING_ENABLED = false
LATEX = latex
MPRUN_ENABLED = false
DEFAULT_UI = browser

#
# Default -inline argument to ocamlopt
#
OCAMLOPT_INLINE = 3

#
# Default installation path: check the environment (and the registry on Windows).
# On Unix, use /usr/local/lib/metaprl by default.
#
INSTALL_DIR =
    getenv(INSTALL_DIR)
        get-registry(HKEY_CURRENT_USER, Software\MetaPRL, INSTALLDIR)
            get-registry(HKEY_LOCAL_MACHINE, Software\MetaPRL, INSTALLDIR)
                get-registry(HKEY_LOCAL_MACHINE, Software\Microsoft\Windows\CurrentVersion, ProgramFilesDir)
                    value $(if $(equal $(OSTYPE), Win32), $'C:\MetaPRL', /usr/local/lib/metaprl)

THEORYPATH[] = $(dir theories) $(ROOT) $(INSTALL_DIR)/theories

#
# Location of OpenSSL on Windows. If your OpenSSL is installed in a different place,
# please use mk/config.local to override.
#
SSL_WIN32 = c:\OpenSSL
SSL_LIB_WIN32 = $(SSL_WIN32)/lib/VC
SSL_INC_WIN32 = $(SSL_WIN32)/include

########################################################################
# General config
#

#
# Simplify the machine name
#
ARCH = $(MACHINE)

if $(equal $(ARCH), Power Macintosh)
    ARCH = ppc
    export

if $(mem $(ARCH), x86 i386 i486 i586 i686)
    ARCH = x86
    export

#
# omake options
#
ABORT_ON_DEPENDENCY_ERRORS = true
OCAMLDEPFLAGS =
USE_OCAMLFIND = false
SCANNER_MODE = error
OCAMLDEP_MODULES_ENABLED = $(OCAMLDEP_MODULES_AVAILABLE)
