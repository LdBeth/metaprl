# -*- Mode: makefile -*-
#
# Assumes variables:
#    ROOT: root directory of the source tree
#

include $(ROOT)/mk/defaults

#
# User definitions - TERMS, REFINER, SEQ_SET, ENSROOT, OCAMLSRC, CCC, THEORIES
#
include $(ROOT)/mk/config
include $(ROOT)/mk/config.local

# All the names for "yes"
YESFLAGS=1 true True t T TRUE Y y yes Yes YES

DEFAULT_THEORIES = base itt
ALL_THEORIES = base ocaml_doc itt ocaml_sos fol czf phobos sil tptp fir experimental/compile mojave
# Outdated and does not currently compile: lf

ifndef TERMS
   TERMS=$(TERMS_DEFAULT)
endif
ifndef REFINER
   REFINER=$(REFINER_DEFAULT)
endif
ifndef MAKE_OPTS
   MAKE_OPTS=-s
endif
ifndef SEQ_SET
   SEQ_SET=$(SEQ_SET_DEFAULT)
endif
ifndef ENSROOT
   ENSROOT=$(ENSROOT_DEFAULT)
endif
ifndef OCAMLSRC
   OCAMLSRC=$(OCAMLSRC_DEFAULT)
endif
ifndef TESTS_ENABLED
   TESTS_ENABLED=$(TESTS_ENABLED_DEFAULT)
endif
ifneq (,$(findstring $(TESTS_ENABLED),$(YESFLAGS)))
   TESTS_ENABLED=YES
else
   TESTS_ENABLED=NO
endif
ifndef CCC
   CCC=$(CCC_DEFAULT)
endif
CC=$(CCC)

ifndef OSTYPE
   OSTYPE=$(shell uname)
endif
ifeq ($(OSTYPE),linux)
   OSTYPE=Linux
endif
ifeq ($(OSTYPE),linux-gnu)
   OSTYPE=Linux
endif
ifeq ($(OSTYPE),posix)
   OSTYPE=Linux
endif
ifeq ($(OSTYPE),solaris)
   OSTYPE=Solaris
endif

#
# NATIVE_ENABLED and BYTE_ENABLED are only set here in case
# the mk/config is created in make and then used by omake
#
ifndef NATIVE_ENABLED
   NATIVE_ENABLED=$(NATIVE_ENABLED_DEFAULT)
endif
ifndef BYTE_ENABLED
   BYTE_ENABLED=$(BYTE_ENABLED_DEFAULT)
endif

#
# Use readline by default on Linux
#
ifndef READLINE_ENABLED
    ifeq ($(OSTYPE),Linux)
        READLINE_ENABLED=YES
        NCURSES_ENABLED=YES
    else
        READLINE_ENABLED=NO
        NCURSES_ENABLED=NO
    endif
endif
ifneq (,$(findstring $(READLINE_ENABLED),$(YESFLAGS)))
   READLINE_ENABLED=YES
   NCURSES_ENABLED=YES
   OTHER_CCLIBS := $(OTHER_CCLIBS) -cclib -lreadline -cclib -lncurses
else
   READLINE_ENABLED=no
endif

#
# Theory directories to compile
#
ifndef THEORIES
   THEORIES = $(THEORIES_DEFAULT)
endif

ifeq ($(ROOT),.) 
   ADDROOT=
else
   ADDROOT=$(ROOT)/
endif

SUPPORT_DIRS =  $(addprefix $(ADDROOT)support/, display shell tactics)
ifeq ($(THEORIES),all)
   MP_DIRS = $(SUPPORT_DIRS) $(addprefix $(ADDROOT)theories/, $(THEORIES_ALL))
else
   MP_DIRS = $(SUPPORT_DIRS) $(addprefix $(ADDROOT)theories/, $(THEORIES))
endif

#
# Options for simp and verb variations
#
PPFLAGS=-D$(REFINER)_EXN -DSEQ_SET=$(SEQ_SET)_linear_set

#
# Parameters
#
ifndef INLINE
   INLINE=5
endif

MAKE:=$(MAKE) $(MAKE_OPTS)

#
# Config
#
ifeq ($(OSTYPE),win32)
   EXE = .exe
endif
ifeq ($(OSTYPE),cygwin32)
   EXE = .exe
endif

ifdef PROFILE
   EXT_LIB=.p.a
   EXT_OBJ=.p.o
   EXT_PROF=.p
else
   EXT_LIB=.a
   EXT_OBJ=.o
   EXT_PROF=
endif

ifndef CAMLLIB
   CAMLLIB = $(CAMLLIB_DEFAULT)
endif

ifndef CAMLP4LIB
   CAMLP4LIB = $(CAMLP4LIB_DEFAULT)
endif

ifndef MPLIB
   MPLIB=$(ROOT)/lib
endif

.PHONY: default check_versions check_versions_opt all lib opt optlib clean depend install export import profile

default: all
check_versions::

#
# OCAML commands
#
ifndef CAMLP4
   CAMLP4 = camlp4o$(EXE)
check_versions::
	@VERSIONS="$(CAMLP4_VERSIONS)" $(ROOT)/mk/check_version.sh "$(CAMLP4)" "" CAMLP4 "Camlp4 version"
endif
ifndef OCAMLC
   OCAMLC := ocamlc$(EXE)
check_versions::
	@VERSIONS="$(CAML_VERSIONS)" $(ROOT)/mk/check_version.sh "$(OCAMLC)" "" OCAMLC "The Objective Caml compiler, version"
endif
ifndef OCAMLCP
   OCAMLCP = $(OCAMLC)
endif
ifndef OCAMLMKTOP
   OCAMLMKTOP = ocamlmktop
check_versions::
	@VERSIONS="$(CAML_VERSIONS)" $(ROOT)/mk/check_version.sh "$(OCAMLMKTOP)" "-o /dev/null" $OCAMLMKTOP "The Objective Caml compiler, version"
endif
ifndef OCAMLOPT
   OCAMLOPT := ocamlopt$(EXE)
check_versions_opt::
	@VERSIONS="$(CAML_VERSIONS)" $(ROOT)/mk/check_version.sh "$(OCAMLOPT)" "" OCAMLOPT "The Objective Caml native-code compiler, version"
endif
ifndef OCAMLLEX
   OCAMLLEX = ocamllex$(EXE)
endif
ifndef OCAMLYACC
   OCAMLYACC = ocamlyacc$(EXE)
endif
ifndef PRLC
   PRLC = $(ROOT)/bin/prlc$(EXE) -lib $(ROOT)/lib
endif
ifndef CONVERT
   CONVERT = $(ROOT)/bin/convert$(EXE)
endif

ifndef SLOPPY_DEPENDENCIES
   SLOPPY_DEPENDENCIES = false
endif

OCAMLC := $(OCAMLC) $(DEFAULT_OCAMLFLAGS)
OCAMLOPT := $(OCAMLOPT) $(DEFAULT_OCAMLFLAGS)
SUPPORT_INCL := -I $(ROOT)/support/display -I $(ROOT)/support/shell -I $(ROOT)/support/tactics

ifeq ($(ENSROOT),undefined)
   ENSEMBLE_DIR=tactics/null
else
   ENSEMBLE_DIR=tactics/ensemble
endif
