# -*- Mode: makefile -*-
#
# Script to generate a program.
# Assumes variables:
#    MFILES: root names of files
#    LMFILES: root names of library files
#    PFILES: root names of program files
#    MLLIBS: root name of libraries
#    MAIN: root name of generated program
#

#
# OCAML commands
#
ifndef CAMLP4
   CAMLP4 := camlp4o
endif
ifndef OCAMLC
   OCAMLC := ocamlc
endif
ifndef OCAMLOPT
   OCAMLOPT := ocamlopt
endif
OCAMLDEP := /usr/local/bin/ocamldep
OCAMLCFLAGS := $(OCAMLFLAGS) $(INCLUDE) -g
OCAMLOPTFLAGS := $(OCAMLFLAGS) $(INCLUDE)
CAMLP4OFLAGS := $(INCLUDE)
CFLAGS = -g -I$(CAMLLIB)
CC = gcc

# Library file names
MLFILES   := $(addsuffix .ml,   $(LMFILES) $(MFILES) $(PFILES))
MLIFILES  := $(addsuffix .mli,  $(LMFILES) $(MFILES) $(PFILES))
LCMOFILES := $(addsuffix .cmo,  $(LMFILES))
LCMXFILES := $(addsuffix .cmx,  $(LMFILES))
CMOFILES  := $(addsuffix .cmo,  $(MFILES))
CMXFILES  := $(addsuffix .cmo,  $(MFILES))
PCMOFILES := $(addsuffix .cmo,  $(PFILES))
PCMXFILES := $(addsuffix .cmo,  $(PFILES))
CMAFILES  := $(addsuffix .cma,  $(MLLIBS))
CMXAFILES := $(addsuffix .cmxa, $(MLLIBS))

OFILES    := $(addsuffix .o, $(LCFILES))
CFILES    := $(addsuffix .c, $(LCFILES))

# Instructions to make
.PHONY: all opt clean depend
.PRECIOUS: %.cmo %.cmi %.cmx %.ml %.mli

.SUFFIXES: .cma .cmx .cmo .cmi .ml .mli .mll .mly

$(MAIN).a: $(OFILES)
	ar r $@ $?
	ranlib $@

$(MAIN).cma: $(LCMOFILES)
	$(OCAMLC) $(OCAMLCFLAGS) -a -o $@ $(LCMOFILES)

$(MAIN).cmxa: $(LCMXFILES)
	$(OCAMLOPT) $(OCAMLCFLAGS) -o -o $@ $(LCMXFILES)

$(MAIN).run: $(CMAFILES) $(CMADEPS) $(PCMOFILES)
	$(OCAMLC) -custom $(OCAMLCFLAGS) -o $@ $(CMALIBS) $(CMAFILES) $(PCMOFILES) $(CCLIBS)
	if [ -f $(MAIN).run.exe ]; then\
		mv $(MAIN).run.exe $(MAIN).run.bak;\
		mv $(MAIN).run.bak $(MAIN).run;\
	fi

$(MAIN): $(CMXAFILES) $(CMXDEPS) $(PCMXFILES)
	$(OCAMLOPT) $(OCAMLCFLAGS) -o $@ $(CMXAFILES) $(CMXLIBS) $(PCMXFILES) $(CCLIBS)
	if [ -f $(MAIN).exe ]; then\
		mv $(MAIN).exe $(MAIN).bak;\
		mv $(MAIN).bak $(MAIN);\
	fi

%.cmo: %.ml %.cmi
	$(OCAMLC) $(OCAMLCFLAGS) -c $*.ml

%.cmi: %.mli
	$(OCAMLC) $(OCAMLCFLAGS) -c $*.mli

%.cmx: %.ml $.mli
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -c $*.ml

%.p4i: %.mli
	$(CAMLP4) $(CAMLP4OFLAGS) $*.mli > $*.p4i

%.p4: %.ml
	$(CAMLP4) $(CAMLP4OFLAGS) $*.ml > $*.p4

%.ml: %.mll
	rm -f $@
	$(OCAMLLEX) $*.mll
	chmod 444 $@

%.ml %.mli: %.mly
	rm -f $*.ml $*.mli
	$(OCAMLYACC) $*.mly
	chmod 444 $*.ml $*.mli

%.ml: %.mlz
	rm -f $@
	cp $*.mlz $@
	chmod 444 $@

%.mli: %.mlz
	rm -f $@
	cp $*.mlz $@
	chmod 444 $@

%.o: %.c
	$(CC) $(CFLAGS) -c $*.c

clean::
	del -f *.cm* *.z* *.o *~ *.bak *.output $(MAIN) $(MAIN).run

depend:: $(MLFILES) $(MLIFILES)
	rm -f Makefile.tmp
	touch Makefile.tmp
ifneq ($(MLFILES),)
	$(OCAMLDEP) $(INCLUDE) $(MLFILES) $(MLIFILES) >> Makefile.tmp
endif
ifneq ($(CFILES),)
	$(CC) $(CFLAGS) -MM $(CFILES) >> Makefile.tmp
endif
	mv Makefile.tmp Makefile.dep
