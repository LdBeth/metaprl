#
# Script to generate a program.
# Assumes variables:
#    MFILES: root names of program files
#    MLZFILES: root names of .mlz files
#    MLYFILES: root names of .mly files
#    MLLFILES: root names of .mll files
#    MLLIBS: root name of libraries
#    MAIN: root name of generated program
#

# OCAML commands
OCAMLC := ocamlc
OCAMLOPT := ocamlopt
OCAMLMKTOP := ocamlmktop
OCAMLDEP := ocamldep
OCAMLLEX := ocamllex
OCAMLYACC := ocamlyacc
OCAMLLIBR := ocamlc
OCAMLTOCL := ocamltocl
OCAMLCFLAGS := $(INCLUDE) -g
OCAMLOPTFLAGS := $(INCLUDE)

# Library file names
MLFILES   := $(addsuffix .ml,   $(MFILES))
MLIFILES  := $(addsuffix .mli,  $(MFILES))
MLYFILES  := $(addsuffix .mly,  $(MLYFILES))
MLLFILES  := $(addsuffix .mll,  $(MLLFILES))
ZOFILES   := $(addsuffix .zo,   $(MFILES))
ZIFILES   := $(addsuffix .zi,   $(MFILES))
ZXFILES   := $(addsuffix .zx,   $(MFILES))
CMOFILES  := $(addsuffix .cmo,  $(MFILES))
CMIFILES  := $(addsuffix .cmi,  $(MFILES))
CMXFILES  := $(addsuffix .cmx,  $(MFILES))
CMAFILES  := $(addsuffix .cma,  $(MLLIBS))
CMXAFILES := $(addsuffix .cmxa, $(MLLIBS))

# Instructions to make
.PHONY: all opt clean depend
.PRECIOUS: %.zo %.zi %.zx %.cmo %.cmi %.cmx %.ml %.mli %.mly %.mll

.SUFFIXES: .cma .cmx .cmo .cmi\
	.zi .zo .zx .ml .mli .mll .mly\
	.cl .cli .cll.cly

$(MAIN).cma: $(CMOFILES)
	$(OCAMLC) $(OCAMLCFLAGS) -a -o $@ $(CMOFILES)

$(MAIN).cmxa: $(CMXFILES)
	$(OCAMLOPT) $(OCAMLCFLAGS) -o -o $@ $(CMXFILES)

$(MAIN).run: $(CMAFILES) $(CMOFILES)
	$(OCAMLC) $(OCAMLCFLAGS) -o $@ $(MLLIBS).cma $(CMOFILES)

$(MAIN): $(CMXAFILES) 
	$(OCAMLOPT) $(OCAMLCFLAGS) -o $@ $(CMXAFILES) $(CMXFILES)

%.cmo: %.ml %.cmi
	$(OCAMLC) $(OCAMLCFLAGS) -c $*.ml

%.cmi: %.mli
	$(OCAMLC) $(OCAMLCFLAGS) -c $*.mli

%.cmx: %.ml $.mli
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -c $*.ml

%.ml: %.mll
	rm -f $@
	$(OCAMLLEX) $*.mll
	chmod 444 $@

%.ml %.mli: %.mly
	rm -f $*.ml $*.mli
	$(OCAMLYACC) $*.mly
	chmod 444 $*.ml $*.mli

%.ml: %.mlz
	rm -f $@
	cp $*.mlz $@
	chmod 444 $@

%.mli: %.mlz
	rm -f $@
	cp $*.mlz $@
	chmod 444 $@

clean::
	del -f *.cm* *.z* *~
	del -f $(MAIN) $(MAIN).run
	del -f *.output

depend:: $(MLFILES) $(MLIFILES) $(MLYFILES) $(MLLFILES)
	$(CAMLDEP) $(INCLUDE) $(MLFILES) $(MLIFILES) $(MLYFILES) $(MLLFILES)
