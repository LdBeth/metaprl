#
# Make sure omake is up-to-date
#
OMakeVersion(0.9.6.5)

#
# Locations of the source tree.
#
LIB      = $(dir lib)
BIN      = $(dir bin)
MK       = $(dir mk)
ROOT     = $(dir .)
EDITOR   = $(dir editor/ml)
BOOT     =

include mk/load_config
include OMakefile_common

########################################################################
# Installation into $(LIB)
#
LibInstallDir(subdir) =
    $(LIB)/$(subdir):
        mkdir -p $@

LibSubInstallNamed(subdir, dst, src) =
    $(LIB)/$(subdir)/$(dst): $(src) $(LIB)/$(subdir) :scanner: /scan-dummy
        $(symlink $<, $@)

    $(MPINSTALL): $(LIB)/$(subdir)/$(dst)

LibSubInstall(subdir, files) =
    foreach(src, $(files))
        LibSubInstallNamed($(subdir), $(basename $(src)), $(src))

LibInstall(files) =
    LibSubInstall($(EMPTY), $(files))

########################################################################
# Directories needing only the standard config
#
.SUBDIRS: clib util

########################################################################
# For the rest of MetaPRL, use our custom scanner.
#
OCAMLDEP = $(file bin/ocamldep$(EXE))

OCAMLDEPFLAGS += -omake

.SCANNER: scan-ocaml-%.mli: %.mli $(OCAMLDEP) OCamlGeneratedFilesTarget
.SCANNER: scan-ocaml-%.ml: %.ml $(OCAMLDEP) OCamlGeneratedFilesTarget :exists: %.mli

#
# Libmojave is using our custom scanner, but otherwise config is normal
#
.SUBDIRS: libmojave

OCAMLINCLUDES += $(dir libmojave/stdlib libmojave/util libmojave/unix)

########################################################################
# Refiner building
#

# Macro preprocess
MACROPP = $(file lib/macropp$(EXE))
MACROPRINT = $(file lib/macroprint$(EXE))

#
# For the refiner and mllib directories,
# add a dependency on the macro processor.
#
section
    # Add the extra dependency
    %.cmi: $(MACROPP)
    %.cmo: $(MACROPP)
    %.cmx: $(MACROPP)

    MACROPPOPTS =
    OCAMLPPFLAGS = -pp $`(quote $(MACROPP) $(MACROPPOPTS))

    %.p4: %.ml $(MACROPRINT)
        $(MACROPRINT) $(MACROPPOPTS) $< > $@

    %.p4i: %.mli $(MACROPRINT)
        $(MACROPRINT) $(MACROPPOPTS) $< > $@

    # These directories use the macro preprocessor
    .SUBDIRS: mllib

    OCAMLINCLUDES += $(dir mllib)

    .SUBDIRS: refiner

OCAMLINCLUDES += $(dir mllib)

.SUBDIRS: proxyedit

OCAMLINCLUDES += $(dir refiner/refsig refiner/refbase refiner/refiner refiner/reflib $(CAMLP4LIB))

########################################################################
# Generic directories with no special options
#
.SUBDIRS: library debug $(ENSEMBLE_DIR) tactics/proof

# Add camlp4 library to include path
OCAMLINCLUDES += $(dir library tactics/proof)

.SUBDIRS: filter

OCAMLINCLUDES += $(dir filter/base filter/filter)

########################################################################
# Theory building
#

#
# Capture the current environment so that some files can use it
# in some places.
#
STANDARD_BUILD_ENV =
    export rules

#
# Include the support directories
#
SUPPORT = $(dir support)
SUPPORT_DIRS = $(dir support/display support/shell support/tactics support/doc)
OCAMLINCLUDES[] += $(SUPPORT_DIRS)

#
# Config for building theories
#
BASE = meta/base

include OMakefile_theories

#
# Also build documentation
#
.SUBDIRS: doc

#
# Additional theories
#
section
   THEORYNAME = support
   THEORYDESCR = MetaPRL Internal "Helper" Modules
   .SUBDIRS: support editor/ml

########################################################################
# Check-status
#
.PHONY: check-status core-incompletes

if $(NATIVE_ENABLED)
   check-status core-incompletes: util/check-status util/check-status.sh $(MP_PREREQS) support/editor/svnversion.txt

   check-status:
      util/check-status nomake

   core-incompletes:
      util/check-status nomake core

else
    check-status core-incompletes:
        eprintln($"""!!! check-status and core-incompletes targets expect MetaPRL to be compiled
!!! to native code.
!!!
!!! Set COMPILATION_MODE to native or both in mk/config, if you need check-status.""")
        exit 1

########################################################################
# Installation
#
INSTALLDIR = $(dir export)

#
# Extra files to install in lib/mk/
#
LibInstallDir(mk)
LibSubInstallNamed(mk, OMakeroot, OMakeroot_install)
LibSubInstallNamed(mk, OMakefile_editor, editor/ml/OMakefile)
LibSubInstall(mk, OMakefile_common OMakefile_theories mk/prlcomp mk/config mk/defaults)

#
# Install everything
#
install: $(MPINSTALL)
    mkdir -p $(INSTALLDIR)/lib $(INSTALLDIR)/bin
    /bin/cp -L -r --remove-destination bin $(INSTALLDIR)
    /bin/cp -L -r --remove-destination lib $(INSTALLDIR)
