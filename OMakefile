#
# Override the root directory
#
OLDROOT = $(ROOT)
ROOT    = $(dir .)
LIB     = $(dir lib)
BIN     = $(dir bin)

#
# Library suffix
#
if $(NATIVE_ENABLED)
   LIB_SUFFIX = .cmxa
   OBJ_SUFFIX = .opt
   export
else
   LIB_SUFFIX = .cma
   OBJ_SUFFIX = .run
   export

#
# If this is the root directory of the project,
# then include the config file.  Otherwise,
# we assume that the variables in the mk/config
# file have been set in the project root.
#
if $(equal $(OLDROOT), $(ROOT))
    #
    # Read the config file.
    # If the config file does not exist, then create one.
    #
    if $(equal $(OSTYPE), Win32)
       .INCLUDE: mk/config
           copy mk\config.win32 mk\config

       #
       # No native-code version of camlp4 on windows
       #
       NATIVE_ENABLED=false
       BYTE_ENABLED=true
       CFLAGS += /MT

       #
       # CAMLLIB should be set in the environment
       #
       CAMLLIB = $(dir $(getenv OCAMLLIB))
       CAMLP4LIB = $(dir $(CAMLLIB)/camlp4)
       export
    else
       .INCLUDE: mk/config
           ROOT=$(ROOT) mk/make_config.sh
           $(CP) mk/config mk/config.win32

       #
       # JYH: I'm not sure why these are not set in mk/config...
       #
       CAMLLIB = $(dir /usr/lib/ocaml)
       CAMLP4LIB = $(dir $(CAMLLIB)/camlp4)

       #
       # Generic CC options
       #
       CC = $(CCC)
       CFLAGS = -Wall -g -O2
       export

    #
    # Include the generic caml library
    #
    INCLUDES += -I$(CAMLLIB)

    export

#
# Generic phony targets
#
.PHONY: all opt install clean realclean depend

#
# Default clean line
#
CLEAN = $'(RM) *.opt *.run *.o *.cm* *~ .\#*
REALCLEAN = $(CLEAN) *.prlb

clean:
    $(CLEAN)

realclean: clean
    cvs_realclean -f

#
# Phony target for installing libraries
#
INSTALL_INTERFACES = true
MPINSTALL = mp.install

.PHONY: $(MPINSTALL)

#
# Always use -linkall on libraries
#
OCAML_LIB_FLAGS = $(OCAML_LIB_FLAGS) -linkall
OTHER_CCLIBS =
if $(not $(equal $(OSTYPE), Win32))
    OTHER_CCLIBS = -cclib -lreadline -cclib -lncurses -cclib -ltermcap
    export

#
# Directories needing only the standard config
#
.SUBDIRS: util clib

########################################################################
# Generic directories with no special options

#
# For the rest of MetaPRL, use our custom scanner.
#
OCAMLDEP = $(file bin/ocamldep$(EXE))

.SCANNER: %.cmi %.cmo %.cmx: $(OCAMLDEP)
    $(OCAMLDEP) $(OCAMLDEPFLAGS) $(OCAMLINCLUDES) $(set $(replacesuffixes .cmi .cmo .cmx, .mli .ml .ml, $^))

#
# MetaPRL is always compiled with threads.
#
THREADS_ENABLED = true
OCAMLFLAGS = $(OCAMLFLAGS) -thread
THREADSLIB = threads

#
# Directories using our custom scanner, but otherwise config is normal
#
.SUBDIRS: library debug ensemble filter

########################################################################
# Refiner building
#

#
# For the refiner and mllib directories,
# add a dependency on the macro processor.
#
if true
    # Add a dependency on the macro preprocess
    OCAMLMACROS = $(file lib/macro.cmo)
    CAMLP4MACRO = camlp4o $(OCAMLMACROS)
    CAMLP4MACROPRINT = camlp4o -I $(CAMLP4LIB) pr_o.cmo $(OCAMLMACROS)

    # Add the extra dependency
    %.mli: $(OCAMLMACROS)
    %.ml: $(OCAMLMACROS)

    # These directories use the macro preprocessor
    .SUBDIRS: mllib refiner

########################################################################
# Theory building

#
# Support directories
#
SUPPORT_DIRS = $(dir $(addprefix support/, display shell tactics))

#
# Theories also have special options
#
DEFAULT_THEORIES = base itt

MC_THEORIES =\
        experimental/mcc/fir/util

LM_THEORIES = $(if $(equal $(LIBMOJAVE), undefined), $(EMPTY), $(MC_THEORIES))

ALL_THEORIES = base ocaml_doc itt ocaml_sos fol czf phobos sil

#
# Commands to compile theory files
#
PRLC = $(file lib/prlc$(EXE))

if true
    # Use prlc, not ocamlc
    if $(equal $(OSTYPE), Win32)
        OCAMLC = set MPLIB=$(LIB)&& $(PRLC)
        OCAMLOPT = set MPLIB=$(LIB)&& $(PRLC) -opt
        export
    else
        OCAMLC = MPLIB=$(LIB) $(PRLC)
        OCAMLOPT = MPLIB=$(LIB) $(PRLC) -opt
        export

    # Add the extra dependency
    %.cmi: $(MPINSTALL) $(PRLC)
    %.cmo: $(MPINSTALL) $(PRLC)
    %.cmx: $(MPINSTALL) $(PRLC)

    # Dependency analysis uses -prl flag by default
    OCAMLDEPFLAGS = -prl

    # Add library to include path
    OCAMLINCLUDES = $(OCAMLINCLUDES) -I $(CAMLP4LIB) -I $(LIB)

    # These directories use prlc
    THEORIES = $(if $(equal $(THEORIES), all), $(ALL_THEORIES), $(THEORIES))
    THEORIES = $(if $(equal $(THEORIES), default), $(DEFAULT_THEORIES), $(THEORIES))
    MP_DIRS  = $(SUPPORT_DIRS) $(dir $(addprefix theories/, $(THEORIES)))

    .SUBDIRS: $(MP_DIRS) editor/ml
